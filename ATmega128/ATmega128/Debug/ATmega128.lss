
ATmega128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  00000f26  00000fba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800178  00800178  00001032  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001032  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001064  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d26  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e49  00000000  00000000  00003ece  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f19  00000000  00000000  00004d17  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00005c30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008e8  00000000  00000000  00005f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013ab  00000000  00000000  00006818  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00007bc3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	46 c0       	rjmp	.+140    	; 0x8e <__ctors_end>
   2:	00 00       	nop
   4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
   a:	00 00       	nop
   c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
   e:	00 00       	nop
  10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
  12:	00 00       	nop
  14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
  16:	00 00       	nop
  18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
  1e:	00 00       	nop
  20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
  22:	00 00       	nop
  24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
  26:	00 00       	nop
  28:	be c0       	rjmp	.+380    	; 0x1a6 <__vector_10>
  2a:	00 00       	nop
  2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
  2e:	00 00       	nop
  30:	5a c3       	rjmp	.+1716   	; 0x6e6 <__vector_12>
  32:	00 00       	nop
  34:	53 c0       	rjmp	.+166    	; 0xdc <__bad_interrupt>
  36:	00 00       	nop
  38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
  3e:	00 00       	nop
  40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
  42:	00 00       	nop
  44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
  46:	00 00       	nop
  48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
  4e:	00 00       	nop
  50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
  52:	00 00       	nop
  54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
  56:	00 00       	nop
  58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
  5e:	00 00       	nop
  60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
  62:	00 00       	nop
  64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
  66:	00 00       	nop
  68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
  6e:	00 00       	nop
  70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
  72:	00 00       	nop
  74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
  76:	00 00       	nop
  78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
  7e:	00 00       	nop
  80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
  82:	00 00       	nop
  84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
  86:	00 00       	nop
  88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
	...

0000008c <__ctors_start>:
  8c:	5d 04       	cpc	r5, r13

0000008e <__ctors_end>:
  8e:	11 24       	eor	r1, r1
  90:	1f be       	out	0x3f, r1	; 63
  92:	cf ef       	ldi	r28, 0xFF	; 255
  94:	d0 e1       	ldi	r29, 0x10	; 16
  96:	de bf       	out	0x3e, r29	; 62
  98:	cd bf       	out	0x3d, r28	; 61

0000009a <__do_copy_data>:
  9a:	11 e0       	ldi	r17, 0x01	; 1
  9c:	a0 e0       	ldi	r26, 0x00	; 0
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	e6 e2       	ldi	r30, 0x26	; 38
  a2:	ff e0       	ldi	r31, 0x0F	; 15
  a4:	00 e0       	ldi	r16, 0x00	; 0
  a6:	0b bf       	out	0x3b, r16	; 59
  a8:	02 c0       	rjmp	.+4      	; 0xae <__do_copy_data+0x14>
  aa:	07 90       	elpm	r0, Z+
  ac:	0d 92       	st	X+, r0
  ae:	a8 37       	cpi	r26, 0x78	; 120
  b0:	b1 07       	cpc	r27, r17
  b2:	d9 f7       	brne	.-10     	; 0xaa <__do_copy_data+0x10>

000000b4 <__do_clear_bss>:
  b4:	21 e0       	ldi	r18, 0x01	; 1
  b6:	a8 e7       	ldi	r26, 0x78	; 120
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
  bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
  be:	a4 39       	cpi	r26, 0x94	; 148
  c0:	b2 07       	cpc	r27, r18
  c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>

000000c4 <__do_global_ctors>:
  c4:	10 e0       	ldi	r17, 0x00	; 0
  c6:	c7 e4       	ldi	r28, 0x47	; 71
  c8:	d0 e0       	ldi	r29, 0x00	; 0
  ca:	03 c0       	rjmp	.+6      	; 0xd2 <__do_global_ctors+0xe>
  cc:	21 97       	sbiw	r28, 0x01	; 1
  ce:	fe 01       	movw	r30, r28
  d0:	1f d7       	rcall	.+3646   	; 0xf10 <__tablejump2__>
  d2:	c6 34       	cpi	r28, 0x46	; 70
  d4:	d1 07       	cpc	r29, r17
  d6:	d1 f7       	brne	.-12     	; 0xcc <__do_global_ctors+0x8>
  d8:	18 d0       	rcall	.+48     	; 0x10a <main>
  da:	23 c7       	rjmp	.+3654   	; 0xf22 <_exit>

000000dc <__bad_interrupt>:
  dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <_Z41__static_initialization_and_destruction_0ii>:
			lcd.setLine(1, 1);
			lcd.print("Pause");
		}
	}
	
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	99 f4       	brne	.+38     	; 0x108 <_Z41__static_initialization_and_destruction_0ii+0x2a>
  e2:	6f 3f       	cpi	r22, 0xFF	; 255
  e4:	7f 4f       	sbci	r23, 0xFF	; 255
  e6:	81 f4       	brne	.+32     	; 0x108 <_Z41__static_initialization_and_destruction_0ii+0x2a>
	bool m_isReversal;
	NonOptimal m_NewValue;
	NonOptimal m_OldValue;

public:
	SW (int switchPort, bool isReversal) { m_SwitchPort = switchPort; m_isReversal = isReversal; }
  e8:	eb e8       	ldi	r30, 0x8B	; 139
  ea:	f1 e0       	ldi	r31, 0x01	; 1
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	91 83       	std	Z+1, r25	; 0x01
  f2:	80 83       	st	Z, r24
  f4:	12 82       	std	Z+2, r1	; 0x02
	unsigned int m_LCDPort;
	unsigned int m_ExtendPort;
	bool m_isDataLong;

public:
	LCD (int LCDPort) { m_LCDPort = LCDPort; }
  f6:	e6 e8       	ldi	r30, 0x86	; 134
  f8:	f1 e0       	ldi	r31, 0x01	; 1
  fa:	11 82       	std	Z+1, r1	; 0x01
  fc:	10 82       	st	Z, r1

class DataLongLCD : public LCD
{

public:
	DataLongLCD (int LCDPort, int extendPort) : LCD (LCDPort) { m_ExtendPort = extendPort; m_isDataLong = true; }
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	93 83       	std	Z+3, r25	; 0x03
 104:	82 83       	std	Z+2, r24	; 0x02
 106:	84 83       	std	Z+4, r24	; 0x04
 108:	08 95       	ret

0000010a <main>:
-------------   MAIN START   ---------------
//========================================*/

int main (void)
{
    beginPort(C, IN);
 10a:	60 e0       	ldi	r22, 0x00	; 0
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	e2 d5       	rcall	.+3012   	; 0xcd6 <_ZN3MCU7Setting9beginPortEib>
	beginPort(B, OUT);
 112:	61 e0       	ldi	r22, 0x01	; 1
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	de d5       	rcall	.+3004   	; 0xcd6 <_ZN3MCU7Setting9beginPortEib>
	beginPort(A, OUT);
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	da d5       	rcall	.+2996   	; 0xcd6 <_ZN3MCU7Setting9beginPortEib>
	
	beginTimer(2, OVF);
 122:	67 e0       	ldi	r22, 0x07	; 7
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	fe d5       	rcall	.+3068   	; 0xd28 <_ZN3MCU7Setting10beginTimerEii>
	beginTimer(1, COMP);
 12c:	66 e0       	ldi	r22, 0x06	; 6
 12e:	70 e0       	ldi	r23, 0x00	; 0
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
	
	lcd.init();
 134:	f9 d5       	rcall	.+3058   	; 0xd28 <_ZN3MCU7Setting10beginTimerEii>
 136:	86 e8       	ldi	r24, 0x86	; 134
 138:	91 e0       	ldi	r25, 0x01	; 1
 13a:	98 d5       	rcall	.+2864   	; 0xc6c <_ZN3LCD4initEv>
	
	sei();
 13c:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13e:	8f e3       	ldi	r24, 0x3F	; 63
 140:	9f e1       	ldi	r25, 0x1F	; 31
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0x38>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x3e>
 148:	00 00       	nop
	
    while (true) 
    {
		_delay_ms(2);
		
		if (Title == ON)
 14a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Title>
 14e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Title+0x1>
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	09 f5       	brne	.+66     	; 0x198 <main+0x8e>
		{
			lcd.setLine(1, 2);
 156:	42 e0       	ldi	r20, 0x02	; 2
 158:	50 e0       	ldi	r21, 0x00	; 0
 15a:	61 e0       	ldi	r22, 0x01	; 1
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	86 e8       	ldi	r24, 0x86	; 134
 160:	91 e0       	ldi	r25, 0x01	; 1
			lcd.print("Counter System");
 162:	18 d5       	rcall	.+2608   	; 0xb94 <_ZN3LCD7setLineEii>
 164:	64 e0       	ldi	r22, 0x04	; 4
 166:	71 e0       	ldi	r23, 0x01	; 1
 168:	86 e8       	ldi	r24, 0x86	; 134
 16a:	91 e0       	ldi	r25, 0x01	; 1
			lcd.setLine(2, 11);
 16c:	00 d5       	rcall	.+2560   	; 0xb6e <_ZN3LCD5printEPKc>
 16e:	4b e0       	ldi	r20, 0x0B	; 11
 170:	50 e0       	ldi	r21, 0x00	; 0
 172:	62 e0       	ldi	r22, 0x02	; 2
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	86 e8       	ldi	r24, 0x86	; 134
 178:	91 e0       	ldi	r25, 0x01	; 1
			lcd.print("by CLJ");
 17a:	0c d5       	rcall	.+2584   	; 0xb94 <_ZN3LCD7setLineEii>
 17c:	63 e1       	ldi	r22, 0x13	; 19
 17e:	71 e0       	ldi	r23, 0x01	; 1
 180:	86 e8       	ldi	r24, 0x86	; 134
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	f4 d4       	rcall	.+2536   	; 0xb6e <_ZN3LCD5printEPKc>
 186:	9f ef       	ldi	r25, 0xFF	; 255
 188:	25 ea       	ldi	r18, 0xA5	; 165
 18a:	8e e0       	ldi	r24, 0x0E	; 14
 18c:	91 50       	subi	r25, 0x01	; 1
 18e:	20 40       	sbci	r18, 0x00	; 0
 190:	80 40       	sbci	r24, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0x82>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0x8c>
 196:	00 00       	nop
 198:	8f e3       	ldi	r24, 0x3F	; 63
 19a:	9f e1       	ldi	r25, 0x1F	; 31
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <main+0x92>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <main+0x98>
 1a2:	00 00       	nop
 1a4:	cc cf       	rjmp	.-104    	; 0x13e <main+0x34>

000001a6 <__vector_10>:
--------------   MAIN END   ----------------
//========================================*/


ISR(TIMER2_OVF_vect)
{
 1a6:	1f 92       	push	r1
 1a8:	0f 92       	push	r0
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	0f 92       	push	r0
 1ae:	11 24       	eor	r1, r1
 1b0:	0b b6       	in	r0, 0x3b	; 59
 1b2:	0f 92       	push	r0
 1b4:	2f 93       	push	r18
 1b6:	3f 93       	push	r19
 1b8:	4f 93       	push	r20
 1ba:	5f 93       	push	r21
 1bc:	6f 93       	push	r22
 1be:	7f 93       	push	r23
 1c0:	8f 93       	push	r24
 1c2:	9f 93       	push	r25
 1c4:	af 93       	push	r26
 1c6:	bf 93       	push	r27
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	ef 93       	push	r30
 1ce:	ff 93       	push	r31
	
	sw.init();
 1d0:	8b e8       	ldi	r24, 0x8B	; 139
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	4c d6       	rcall	.+3224   	; 0xe6e <_ZN2SW4initEv>
	
	if (sw.result != SW_OFF)
 1d6:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <sw+0x7>
 1da:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <sw+0x8>
 1de:	89 2b       	or	r24, r25
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <__vector_10+0x3e>
 1e2:	6c c2       	rjmp	.+1240   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
	{
		switch (sw.result)
 1e4:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <sw+0x7>
 1e8:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <sw+0x8>
 1ec:	88 30       	cpi	r24, 0x08	; 8
 1ee:	91 05       	cpc	r25, r1
 1f0:	09 f4       	brne	.+2      	; 0x1f4 <__vector_10+0x4e>
 1f2:	e9 c0       	rjmp	.+466    	; 0x3c6 <__vector_10+0x220>
 1f4:	60 f4       	brcc	.+24     	; 0x20e <__vector_10+0x68>
 1f6:	82 30       	cpi	r24, 0x02	; 2
 1f8:	91 05       	cpc	r25, r1
 1fa:	09 f4       	brne	.+2      	; 0x1fe <__vector_10+0x58>
 1fc:	83 c0       	rjmp	.+262    	; 0x304 <__vector_10+0x15e>
 1fe:	84 30       	cpi	r24, 0x04	; 4
 200:	91 05       	cpc	r25, r1
 202:	09 f4       	brne	.+2      	; 0x206 <__vector_10+0x60>
 204:	86 c0       	rjmp	.+268    	; 0x312 <__vector_10+0x16c>
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	09 f0       	breq	.+2      	; 0x20c <__vector_10+0x66>
 20a:	58 c2       	rjmp	.+1200   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 20c:	12 c0       	rjmp	.+36     	; 0x232 <__vector_10+0x8c>
 20e:	80 32       	cpi	r24, 0x20	; 32
 210:	91 05       	cpc	r25, r1
 212:	09 f4       	brne	.+2      	; 0x216 <__vector_10+0x70>
 214:	64 c1       	rjmp	.+712    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 216:	20 f4       	brcc	.+8      	; 0x220 <__vector_10+0x7a>
 218:	40 97       	sbiw	r24, 0x10	; 16
 21a:	09 f4       	brne	.+2      	; 0x21e <__vector_10+0x78>
 21c:	10 c1       	rjmp	.+544    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 21e:	4e c2       	rjmp	.+1180   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 220:	80 34       	cpi	r24, 0x40	; 64
 222:	91 05       	cpc	r25, r1
 224:	09 f4       	brne	.+2      	; 0x228 <__vector_10+0x82>
 226:	ab c1       	rjmp	.+854    	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 228:	80 38       	cpi	r24, 0x80	; 128
 22a:	91 05       	cpc	r25, r1
 22c:	09 f4       	brne	.+2      	; 0x230 <__vector_10+0x8a>
 22e:	f7 c1       	rjmp	.+1006   	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 230:	45 c2       	rjmp	.+1162   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
		{
			case SW_0:				// Start and Restart when Time's set
				Title = OFF;
 232:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <Title+0x1>
 236:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <Title>
				
				if (Set == ON && Setted == OFF)
 23a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
 23e:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	91 05       	cpc	r25, r1
 246:	11 f5       	brne	.+68     	; 0x28c <__vector_10+0xe6>
 248:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <Setted>
 24c:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <Setted+0x1>
 250:	23 2b       	or	r18, r19
 252:	e1 f4       	brne	.+56     	; 0x28c <__vector_10+0xe6>
				{
					lcd.clear(ALL);
 254:	69 e0       	ldi	r22, 0x09	; 9
 256:	70 e0       	ldi	r23, 0x00	; 0
 258:	86 e8       	ldi	r24, 0x86	; 134
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	d1 d4       	rcall	.+2466   	; 0xc00 <_ZN3LCD5clearEi>
					
					lcd.setLine(1, 1);
 25e:	41 e0       	ldi	r20, 0x01	; 1
 260:	50 e0       	ldi	r21, 0x00	; 0
 262:	61 e0       	ldi	r22, 0x01	; 1
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	86 e8       	ldi	r24, 0x86	; 134
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	94 d4       	rcall	.+2344   	; 0xb94 <_ZN3LCD7setLineEii>
					lcd.print("Counting");
 26c:	6a e1       	ldi	r22, 0x1A	; 26
 26e:	71 e0       	ldi	r23, 0x01	; 1
 270:	86 e8       	ldi	r24, 0x86	; 134
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	7c d4       	rcall	.+2296   	; 0xb6e <_ZN3LCD5printEPKc>
					
					Start = ON;
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <Start+0x1>
 27e:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <Start>
					Pause = OFF;
 282:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 286:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 28a:	18 c2       	rjmp	.+1072   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				}
				
				else if (Set == OFF && Setted == OFF)
 28c:	89 2b       	or	r24, r25
 28e:	09 f0       	breq	.+2      	; 0x292 <__vector_10+0xec>
 290:	15 c2       	rjmp	.+1066   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 292:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 296:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 29a:	89 2b       	or	r24, r25
 29c:	09 f0       	breq	.+2      	; 0x2a0 <__vector_10+0xfa>
 29e:	0e c2       	rjmp	.+1052   	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				{
					lcd.clear(ALL);
 2a0:	69 e0       	ldi	r22, 0x09	; 9
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	86 e8       	ldi	r24, 0x86	; 134
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	ab d4       	rcall	.+2390   	; 0xc00 <_ZN3LCD5clearEi>
					
					lcd.setLine(1, 1);
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	61 e0       	ldi	r22, 0x01	; 1
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	86 e8       	ldi	r24, 0x86	; 134
 2b4:	91 e0       	ldi	r25, 0x01	; 1
					lcd.print("Please Push SW 3");
 2b6:	6e d4       	rcall	.+2268   	; 0xb94 <_ZN3LCD7setLineEii>
 2b8:	63 e2       	ldi	r22, 0x23	; 35
 2ba:	71 e0       	ldi	r23, 0x01	; 1
 2bc:	86 e8       	ldi	r24, 0x86	; 134
 2be:	91 e0       	ldi	r25, 0x01	; 1
					lcd.setLine(2, 2);
 2c0:	56 d4       	rcall	.+2220   	; 0xb6e <_ZN3LCD5printEPKc>
 2c2:	42 e0       	ldi	r20, 0x02	; 2
 2c4:	50 e0       	ldi	r21, 0x00	; 0
 2c6:	62 e0       	ldi	r22, 0x02	; 2
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	86 e8       	ldi	r24, 0x86	; 134
 2cc:	91 e0       	ldi	r25, 0x01	; 1
					lcd.print("to Set the Time");
 2ce:	62 d4       	rcall	.+2244   	; 0xb94 <_ZN3LCD7setLineEii>
 2d0:	64 e3       	ldi	r22, 0x34	; 52
 2d2:	71 e0       	ldi	r23, 0x01	; 1
 2d4:	86 e8       	ldi	r24, 0x86	; 134
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	4a d4       	rcall	.+2196   	; 0xb6e <_ZN3LCD5printEPKc>
 2da:	2f ef       	ldi	r18, 0xFF	; 255
 2dc:	8f e4       	ldi	r24, 0x4F	; 79
 2de:	93 ec       	ldi	r25, 0xC3	; 195
 2e0:	21 50       	subi	r18, 0x01	; 1
 2e2:	80 40       	sbci	r24, 0x00	; 0
 2e4:	90 40       	sbci	r25, 0x00	; 0
 2e6:	e1 f7       	brne	.-8      	; 0x2e0 <__vector_10+0x13a>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <__vector_10+0x144>
					
					_delay_ms(4000);
					
					lcd.clear(ALL);
 2ea:	00 00       	nop
 2ec:	69 e0       	ldi	r22, 0x09	; 9
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	86 e8       	ldi	r24, 0x86	; 134
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	85 d4       	rcall	.+2314   	; 0xc00 <_ZN3LCD5clearEi>
					
					Title = ON;
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Title+0x1>
 2fe:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Title>
 302:	dc c1       	rjmp	.+952    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				}
				
				break;
				
			case SW_1:				// Pause when Time's started
				Pause = ON;
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 30c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				break;
 310:	d5 c1       	rjmp	.+938    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				
			case SW_2:				// Go to Setting when Time's not set
				Title = OFF;
 312:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <Title+0x1>
 316:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <Title>
				
				if (Set == OFF && Setted == OFF)
 31a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
 31e:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 322:	89 2b       	or	r24, r25
 324:	09 f0       	breq	.+2      	; 0x328 <__vector_10+0x182>
 326:	ca c1       	rjmp	.+916    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 328:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 32c:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 330:	89 2b       	or	r24, r25
 332:	09 f0       	breq	.+2      	; 0x336 <__vector_10+0x190>
 334:	c3 c1       	rjmp	.+902    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				{
					Setted = ON;
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <Setted+0x1>
 33e:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <Setted>
					
					lcd.clear(ALL);
 342:	69 e0       	ldi	r22, 0x09	; 9
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	86 e8       	ldi	r24, 0x86	; 134
 348:	91 e0       	ldi	r25, 0x01	; 1
					
					lcd.setLine(1, 1);
 34a:	5a d4       	rcall	.+2228   	; 0xc00 <_ZN3LCD5clearEi>
 34c:	41 e0       	ldi	r20, 0x01	; 1
 34e:	50 e0       	ldi	r21, 0x00	; 0
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	86 e8       	ldi	r24, 0x86	; 134
 356:	91 e0       	ldi	r25, 0x01	; 1
					lcd.print("Set Time");
 358:	1d d4       	rcall	.+2106   	; 0xb94 <_ZN3LCD7setLineEii>
 35a:	64 e4       	ldi	r22, 0x44	; 68
 35c:	71 e0       	ldi	r23, 0x01	; 1
 35e:	86 e8       	ldi	r24, 0x86	; 134
 360:	91 e0       	ldi	r25, 0x01	; 1
					
					lcd.setLine(2, 12);
 362:	05 d4       	rcall	.+2058   	; 0xb6e <_ZN3LCD5printEPKc>
 364:	4c e0       	ldi	r20, 0x0C	; 12
 366:	50 e0       	ldi	r21, 0x00	; 0
 368:	62 e0       	ldi	r22, 0x02	; 2
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	86 e8       	ldi	r24, 0x86	; 134
 36e:	91 e0       	ldi	r25, 0x01	; 1
					lcd.exportData(ASKII(i));
 370:	11 d4       	rcall	.+2082   	; 0xb94 <_ZN3LCD7setLineEii>
 372:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 376:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 37a:	a5 d4       	rcall	.+2378   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 37c:	bc 01       	movw	r22, r24
 37e:	86 e8       	ldi	r24, 0x86	; 134
 380:	91 e0       	ldi	r25, 0x01	; 1
					lcd.exportData(ASKII(j));
 382:	5f d3       	rcall	.+1726   	; 0xa42 <_ZN3LCD10exportDataEi>
 384:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 388:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 38c:	9c d4       	rcall	.+2360   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 38e:	bc 01       	movw	r22, r24
 390:	86 e8       	ldi	r24, 0x86	; 134
 392:	91 e0       	ldi	r25, 0x01	; 1
					lcd.print(":");
 394:	56 d3       	rcall	.+1708   	; 0xa42 <_ZN3LCD10exportDataEi>
 396:	6d e4       	ldi	r22, 0x4D	; 77
 398:	71 e0       	ldi	r23, 0x01	; 1
 39a:	86 e8       	ldi	r24, 0x86	; 134
					lcd.exportData(ASKII(k));
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	e7 d3       	rcall	.+1998   	; 0xb6e <_ZN3LCD5printEPKc>
 3a0:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 3a4:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 3a8:	8e d4       	rcall	.+2332   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 3aa:	bc 01       	movw	r22, r24
 3ac:	86 e8       	ldi	r24, 0x86	; 134
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	48 d3       	rcall	.+1680   	; 0xa42 <_ZN3LCD10exportDataEi>
					lcd.exportData(ASKII(l));
 3b2:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
 3b6:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 3ba:	85 d4       	rcall	.+2314   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 3bc:	bc 01       	movw	r22, r24
 3be:	86 e8       	ldi	r24, 0x86	; 134
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	3f d3       	rcall	.+1662   	; 0xa42 <_ZN3LCD10exportDataEi>
 3c4:	7b c1       	rjmp	.+758    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 3c6:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
				}
				
				break;
			
			case SW_3:				// Set the Time when Time's not set and it's in Setting
				if (Set == OFF && Setted == ON)
 3ca:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 3ce:	89 2b       	or	r24, r25
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <__vector_10+0x22e>
 3d2:	74 c1       	rjmp	.+744    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 3d4:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 3d8:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	09 f0       	breq	.+2      	; 0x3e2 <__vector_10+0x23c>
 3e0:	6d c1       	rjmp	.+730    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				{
					Set = ON;
 3e2:	c1 e0       	ldi	r28, 0x01	; 1
 3e4:	d0 e0       	ldi	r29, 0x00	; 0
 3e6:	d0 93 83 01 	sts	0x0183, r29	; 0x800183 <Set+0x1>
 3ea:	c0 93 82 01 	sts	0x0182, r28	; 0x800182 <Set>
					Setted = OFF;
 3ee:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <Setted+0x1>
 3f2:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <Setted>
					
					lcd.clear(1);
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	86 e8       	ldi	r24, 0x86	; 134
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	00 d4       	rcall	.+2048   	; 0xc00 <_ZN3LCD5clearEi>
					
					lcd.setLine(1, 1);
 400:	41 e0       	ldi	r20, 0x01	; 1
 402:	50 e0       	ldi	r21, 0x00	; 0
 404:	61 e0       	ldi	r22, 0x01	; 1
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	86 e8       	ldi	r24, 0x86	; 134
 40a:	91 e0       	ldi	r25, 0x01	; 1
 40c:	c3 d3       	rcall	.+1926   	; 0xb94 <_ZN3LCD7setLineEii>
					lcd.print("Set Complete");
 40e:	6f e4       	ldi	r22, 0x4F	; 79
 410:	71 e0       	ldi	r23, 0x01	; 1
 412:	86 e8       	ldi	r24, 0x86	; 134
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	ab d3       	rcall	.+1878   	; 0xb6e <_ZN3LCD5printEPKc>
 418:	2f ef       	ldi	r18, 0xFF	; 255
 41a:	87 ea       	ldi	r24, 0xA7	; 167
 41c:	91 e6       	ldi	r25, 0x61	; 97
 41e:	21 50       	subi	r18, 0x01	; 1
 420:	80 40       	sbci	r24, 0x00	; 0
 422:	90 40       	sbci	r25, 0x00	; 0
 424:	e1 f7       	brne	.-8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 426:	00 c0       	rjmp	.+0      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 428:	00 00       	nop
 42a:	69 e0       	ldi	r22, 0x09	; 9
					
					_delay_ms(2000);
					
					lcd.clear(ALL);
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	86 e8       	ldi	r24, 0x86	; 134
 430:	91 e0       	ldi	r25, 0x01	; 1
 432:	e6 d3       	rcall	.+1996   	; 0xc00 <_ZN3LCD5clearEi>
 434:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <Title+0x1>
					
					Title = ON;
 438:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <Title>
 43c:	3f c1       	rjmp	.+638    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 43e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
				}
				
				break;
			
			case SW_4:				// Control the Time when it's in Setting
				if (Set == OFF && Setted == ON)
 442:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 446:	89 2b       	or	r24, r25
 448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44a:	38 c1       	rjmp	.+624    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 44c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 450:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 454:	01 97       	sbiw	r24, 0x01	; 1
 456:	09 f0       	breq	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 458:	31 c1       	rjmp	.+610    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 45a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
				{
					if (i != 5)
 45e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 462:	85 30       	cpi	r24, 0x05	; 5
 464:	91 05       	cpc	r25, r1
					{
						i++;
 466:	31 f0       	breq	.+12     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 468:	01 96       	adiw	r24, 0x01	; 1
 46a:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <i+0x1>
 46e:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <i>
					}
					
					else
					{
						i = 0;
 472:	04 c0       	rjmp	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 474:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <i+0x1>
					}
					
					lcd.setLine(2, 12);
 478:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <i>
 47c:	4c e0       	ldi	r20, 0x0C	; 12
 47e:	50 e0       	ldi	r21, 0x00	; 0
 480:	62 e0       	ldi	r22, 0x02	; 2
 482:	70 e0       	ldi	r23, 0x00	; 0
					lcd.exportData(ASKII(i));
 484:	86 e8       	ldi	r24, 0x86	; 134
 486:	91 e0       	ldi	r25, 0x01	; 1
 488:	85 d3       	rcall	.+1802   	; 0xb94 <_ZN3LCD7setLineEii>
 48a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 48e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 492:	19 d4       	rcall	.+2098   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 494:	bc 01       	movw	r22, r24
					lcd.exportData(ASKII(j));
 496:	86 e8       	ldi	r24, 0x86	; 134
 498:	91 e0       	ldi	r25, 0x01	; 1
 49a:	d3 d2       	rcall	.+1446   	; 0xa42 <_ZN3LCD10exportDataEi>
 49c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 4a0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 4a4:	10 d4       	rcall	.+2080   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 4a6:	bc 01       	movw	r22, r24
 4a8:	86 e8       	ldi	r24, 0x86	; 134
					lcd.print(":");
 4aa:	91 e0       	ldi	r25, 0x01	; 1
 4ac:	ca d2       	rcall	.+1428   	; 0xa42 <_ZN3LCD10exportDataEi>
 4ae:	6d e4       	ldi	r22, 0x4D	; 77
 4b0:	71 e0       	ldi	r23, 0x01	; 1
 4b2:	86 e8       	ldi	r24, 0x86	; 134
 4b4:	91 e0       	ldi	r25, 0x01	; 1
					lcd.exportData(ASKII(k));
 4b6:	5b d3       	rcall	.+1718   	; 0xb6e <_ZN3LCD5printEPKc>
 4b8:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 4bc:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 4c0:	02 d4       	rcall	.+2052   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 4c2:	bc 01       	movw	r22, r24
 4c4:	86 e8       	ldi	r24, 0x86	; 134
 4c6:	91 e0       	ldi	r25, 0x01	; 1
 4c8:	bc d2       	rcall	.+1400   	; 0xa42 <_ZN3LCD10exportDataEi>
 4ca:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
					lcd.exportData(ASKII(l));
 4ce:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 4d2:	f9 d3       	rcall	.+2034   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 4d4:	bc 01       	movw	r22, r24
 4d6:	86 e8       	ldi	r24, 0x86	; 134
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	b3 d2       	rcall	.+1382   	; 0xa42 <_ZN3LCD10exportDataEi>
 4dc:	ef c0       	rjmp	.+478    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 4de:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
 4e2:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
				}
				
				break;
				
			case SW_5:
				if (Set == OFF && Setted == ON)
 4e6:	89 2b       	or	r24, r25
 4e8:	09 f0       	breq	.+2      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4ea:	e8 c0       	rjmp	.+464    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 4ec:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 4f0:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 4f4:	01 97       	sbiw	r24, 0x01	; 1
 4f6:	09 f0       	breq	.+2      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f8:	e1 c0       	rjmp	.+450    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
				{
					if (j != 9)
 4fa:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 4fe:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 502:	89 30       	cpi	r24, 0x09	; 9
					{
						j++;
 504:	91 05       	cpc	r25, r1
 506:	31 f0       	breq	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <j+0x1>
					}
					
					else
					{
						j = 0;
 50e:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <j>
 512:	04 c0       	rjmp	.+8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
					}
					
					lcd.setLine(2, 12);
 514:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <j+0x1>
 518:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <j>
 51c:	4c e0       	ldi	r20, 0x0C	; 12
 51e:	50 e0       	ldi	r21, 0x00	; 0
					lcd.exportData(ASKII(i));
 520:	62 e0       	ldi	r22, 0x02	; 2
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	86 e8       	ldi	r24, 0x86	; 134
 526:	91 e0       	ldi	r25, 0x01	; 1
 528:	35 d3       	rcall	.+1642   	; 0xb94 <_ZN3LCD7setLineEii>
 52a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 52e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 532:	c9 d3       	rcall	.+1938   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
					lcd.exportData(ASKII(j));
 534:	bc 01       	movw	r22, r24
 536:	86 e8       	ldi	r24, 0x86	; 134
 538:	91 e0       	ldi	r25, 0x01	; 1
 53a:	83 d2       	rcall	.+1286   	; 0xa42 <_ZN3LCD10exportDataEi>
 53c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 540:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 544:	c0 d3       	rcall	.+1920   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 546:	bc 01       	movw	r22, r24
 548:	86 e8       	ldi	r24, 0x86	; 134
					lcd.print(":");
 54a:	91 e0       	ldi	r25, 0x01	; 1
 54c:	7a d2       	rcall	.+1268   	; 0xa42 <_ZN3LCD10exportDataEi>
 54e:	6d e4       	ldi	r22, 0x4D	; 77
 550:	71 e0       	ldi	r23, 0x01	; 1
 552:	86 e8       	ldi	r24, 0x86	; 134
 554:	91 e0       	ldi	r25, 0x01	; 1
					lcd.exportData(ASKII(k));
 556:	0b d3       	rcall	.+1558   	; 0xb6e <_ZN3LCD5printEPKc>
 558:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 55c:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 560:	b2 d3       	rcall	.+1892   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 562:	bc 01       	movw	r22, r24
 564:	86 e8       	ldi	r24, 0x86	; 134
 566:	91 e0       	ldi	r25, 0x01	; 1
 568:	6c d2       	rcall	.+1240   	; 0xa42 <_ZN3LCD10exportDataEi>
 56a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
					lcd.exportData(ASKII(l));
 56e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 572:	a9 d3       	rcall	.+1874   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 574:	bc 01       	movw	r22, r24
 576:	86 e8       	ldi	r24, 0x86	; 134
 578:	91 e0       	ldi	r25, 0x01	; 1
 57a:	63 d2       	rcall	.+1222   	; 0xa42 <_ZN3LCD10exportDataEi>
 57c:	9f c0       	rjmp	.+318    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 57e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
				}
				
				break;
			
			case SW_6:
				if (Set == OFF && Setted == ON)
 582:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 586:	89 2b       	or	r24, r25
 588:	09 f0       	breq	.+2      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 58a:	98 c0       	rjmp	.+304    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 58c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 590:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 594:	01 97       	sbiw	r24, 0x01	; 1
 596:	09 f0       	breq	.+2      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
				{
					if (k != 5)
 598:	91 c0       	rjmp	.+290    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 59a:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 59e:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 5a2:	85 30       	cpi	r24, 0x05	; 5
					{
						k++;
 5a4:	91 05       	cpc	r25, r1
 5a6:	31 f0       	breq	.+12     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a8:	01 96       	adiw	r24, 0x01	; 1
 5aa:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <k+0x1>
					}
					
					else
					{
						k = 0;
 5ae:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
					}
					
					lcd.setLine(2, 12);
 5b4:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <k+0x1>
 5b8:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <k>
 5bc:	4c e0       	ldi	r20, 0x0C	; 12
 5be:	50 e0       	ldi	r21, 0x00	; 0
 5c0:	62 e0       	ldi	r22, 0x02	; 2
					lcd.exportData(ASKII(i));
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	86 e8       	ldi	r24, 0x86	; 134
 5c6:	91 e0       	ldi	r25, 0x01	; 1
 5c8:	e5 d2       	rcall	.+1482   	; 0xb94 <_ZN3LCD7setLineEii>
 5ca:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 5ce:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 5d2:	79 d3       	rcall	.+1778   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 5d4:	bc 01       	movw	r22, r24
 5d6:	86 e8       	ldi	r24, 0x86	; 134
					lcd.exportData(ASKII(j));
 5d8:	91 e0       	ldi	r25, 0x01	; 1
 5da:	33 d2       	rcall	.+1126   	; 0xa42 <_ZN3LCD10exportDataEi>
 5dc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 5e0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 5e4:	70 d3       	rcall	.+1760   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 5e6:	bc 01       	movw	r22, r24
 5e8:	86 e8       	ldi	r24, 0x86	; 134
 5ea:	91 e0       	ldi	r25, 0x01	; 1
 5ec:	2a d2       	rcall	.+1108   	; 0xa42 <_ZN3LCD10exportDataEi>
					lcd.print(":");
 5ee:	6d e4       	ldi	r22, 0x4D	; 77
 5f0:	71 e0       	ldi	r23, 0x01	; 1
 5f2:	86 e8       	ldi	r24, 0x86	; 134
 5f4:	91 e0       	ldi	r25, 0x01	; 1
 5f6:	bb d2       	rcall	.+1398   	; 0xb6e <_ZN3LCD5printEPKc>
 5f8:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
					lcd.exportData(ASKII(k));
 5fc:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 600:	62 d3       	rcall	.+1732   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 602:	bc 01       	movw	r22, r24
 604:	86 e8       	ldi	r24, 0x86	; 134
 606:	91 e0       	ldi	r25, 0x01	; 1
 608:	1c d2       	rcall	.+1080   	; 0xa42 <_ZN3LCD10exportDataEi>
 60a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
					lcd.exportData(ASKII(l));
 60e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 612:	59 d3       	rcall	.+1714   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 614:	bc 01       	movw	r22, r24
 616:	86 e8       	ldi	r24, 0x86	; 134
 618:	91 e0       	ldi	r25, 0x01	; 1
 61a:	13 d2       	rcall	.+1062   	; 0xa42 <_ZN3LCD10exportDataEi>
 61c:	4f c0       	rjmp	.+158    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 61e:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <Set>
				}
				
				break;
			
			case SW_7:
				if (Set == OFF && Setted == ON)
 622:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <Set+0x1>
 626:	89 2b       	or	r24, r25
 628:	09 f0       	breq	.+2      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 62a:	48 c0       	rjmp	.+144    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 62c:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <Setted>
 630:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <Setted+0x1>
 634:	01 97       	sbiw	r24, 0x01	; 1
				{
					if (l != 9)
 636:	09 f0       	breq	.+2      	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 638:	41 c0       	rjmp	.+130    	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 63a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
 63e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
					{
						l++;
 642:	89 30       	cpi	r24, 0x09	; 9
 644:	91 05       	cpc	r25, r1
 646:	31 f0       	breq	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 648:	01 96       	adiw	r24, 0x01	; 1
 64a:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <__data_end+0x1>
					}
					
					else
					{
						l = 0;
 64e:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
 652:	04 c0       	rjmp	.+8      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
					}
					
					lcd.setLine(2, 12);
 654:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <__data_end+0x1>
 658:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
 65c:	4c e0       	ldi	r20, 0x0C	; 12
 65e:	50 e0       	ldi	r21, 0x00	; 0
 660:	62 e0       	ldi	r22, 0x02	; 2
 662:	70 e0       	ldi	r23, 0x00	; 0
					lcd.exportData(ASKII(i));
 664:	86 e8       	ldi	r24, 0x86	; 134
 666:	91 e0       	ldi	r25, 0x01	; 1
 668:	95 d2       	rcall	.+1322   	; 0xb94 <_ZN3LCD7setLineEii>
 66a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 66e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 672:	29 d3       	rcall	.+1618   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 674:	bc 01       	movw	r22, r24
 676:	86 e8       	ldi	r24, 0x86	; 134
 678:	91 e0       	ldi	r25, 0x01	; 1
					lcd.exportData(ASKII(j));
 67a:	e3 d1       	rcall	.+966    	; 0xa42 <_ZN3LCD10exportDataEi>
 67c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 680:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 684:	20 d3       	rcall	.+1600   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 686:	bc 01       	movw	r22, r24
 688:	86 e8       	ldi	r24, 0x86	; 134
 68a:	91 e0       	ldi	r25, 0x01	; 1
 68c:	da d1       	rcall	.+948    	; 0xa42 <_ZN3LCD10exportDataEi>
 68e:	6d e4       	ldi	r22, 0x4D	; 77
					lcd.print(":");
 690:	71 e0       	ldi	r23, 0x01	; 1
 692:	86 e8       	ldi	r24, 0x86	; 134
 694:	91 e0       	ldi	r25, 0x01	; 1
 696:	6b d2       	rcall	.+1238   	; 0xb6e <_ZN3LCD5printEPKc>
 698:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
					lcd.exportData(ASKII(k));
 69c:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 6a0:	12 d3       	rcall	.+1572   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 6a2:	bc 01       	movw	r22, r24
 6a4:	86 e8       	ldi	r24, 0x86	; 134
 6a6:	91 e0       	ldi	r25, 0x01	; 1
 6a8:	cc d1       	rcall	.+920    	; 0xa42 <_ZN3LCD10exportDataEi>
 6aa:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
 6ae:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
					lcd.exportData(ASKII(l));
 6b2:	09 d3       	rcall	.+1554   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 6b4:	bc 01       	movw	r22, r24
 6b6:	86 e8       	ldi	r24, 0x86	; 134
 6b8:	91 e0       	ldi	r25, 0x01	; 1
 6ba:	c3 d1       	rcall	.+902    	; 0xa42 <_ZN3LCD10exportDataEi>
 6bc:	ff 91       	pop	r31
 6be:	ef 91       	pop	r30
 6c0:	df 91       	pop	r29
 6c2:	cf 91       	pop	r28
 6c4:	bf 91       	pop	r27
 6c6:	af 91       	pop	r26
			default:
				break;
		}
	}
	
}
 6c8:	9f 91       	pop	r25
 6ca:	8f 91       	pop	r24
 6cc:	7f 91       	pop	r23
 6ce:	6f 91       	pop	r22
 6d0:	5f 91       	pop	r21
 6d2:	4f 91       	pop	r20
 6d4:	3f 91       	pop	r19
 6d6:	2f 91       	pop	r18
 6d8:	0f 90       	pop	r0
 6da:	0b be       	out	0x3b, r0	; 59
 6dc:	0f 90       	pop	r0
 6de:	0f be       	out	0x3f, r0	; 63
 6e0:	0f 90       	pop	r0
 6e2:	1f 90       	pop	r1
 6e4:	18 95       	reti

000006e6 <__vector_12>:
 6e6:	1f 92       	push	r1
 6e8:	0f 92       	push	r0
 6ea:	0f b6       	in	r0, 0x3f	; 63
 6ec:	0f 92       	push	r0
 6ee:	11 24       	eor	r1, r1
 6f0:	0b b6       	in	r0, 0x3b	; 59


ISR(TIMER1_COMPA_vect)
{
 6f2:	0f 92       	push	r0
 6f4:	2f 93       	push	r18
 6f6:	3f 93       	push	r19
 6f8:	4f 93       	push	r20
 6fa:	5f 93       	push	r21
 6fc:	6f 93       	push	r22
 6fe:	7f 93       	push	r23
 700:	8f 93       	push	r24
 702:	9f 93       	push	r25
 704:	af 93       	push	r26
 706:	bf 93       	push	r27
 708:	ef 93       	push	r30
 70a:	ff 93       	push	r31
	
	if (Start == ON)
 70c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <Start>
 710:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <Start+0x1>
 714:	01 97       	sbiw	r24, 0x01	; 1
 716:	09 f0       	breq	.+2      	; 0x71a <__vector_12+0x34>
 718:	bd c0       	rjmp	.+378    	; 0x894 <__vector_12+0x1ae>
	{
		if (Pause == OFF)
 71a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 71e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 722:	89 2b       	or	r24, r25
 724:	09 f0       	breq	.+2      	; 0x728 <__vector_12+0x42>
 726:	a5 c0       	rjmp	.+330    	; 0x872 <__vector_12+0x18c>
		{
			
			lcd.setLine(2, 12);
 728:	4c e0       	ldi	r20, 0x0C	; 12
 72a:	50 e0       	ldi	r21, 0x00	; 0
 72c:	62 e0       	ldi	r22, 0x02	; 2
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	86 e8       	ldi	r24, 0x86	; 134
 732:	91 e0       	ldi	r25, 0x01	; 1
 734:	2f d2       	rcall	.+1118   	; 0xb94 <_ZN3LCD7setLineEii>
			
			lcd.exportData(ASKII(i));
 736:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
 73a:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 73e:	c3 d2       	rcall	.+1414   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 740:	bc 01       	movw	r22, r24
 742:	86 e8       	ldi	r24, 0x86	; 134
 744:	91 e0       	ldi	r25, 0x01	; 1
 746:	7d d1       	rcall	.+762    	; 0xa42 <_ZN3LCD10exportDataEi>
			lcd.exportData(ASKII(j));
 748:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
 74c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 750:	ba d2       	rcall	.+1396   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 752:	bc 01       	movw	r22, r24
 754:	86 e8       	ldi	r24, 0x86	; 134
 756:	91 e0       	ldi	r25, 0x01	; 1
 758:	74 d1       	rcall	.+744    	; 0xa42 <_ZN3LCD10exportDataEi>
			lcd.print(":");
 75a:	6d e4       	ldi	r22, 0x4D	; 77
 75c:	71 e0       	ldi	r23, 0x01	; 1
 75e:	86 e8       	ldi	r24, 0x86	; 134
 760:	91 e0       	ldi	r25, 0x01	; 1
 762:	05 d2       	rcall	.+1034   	; 0xb6e <_ZN3LCD5printEPKc>
			lcd.exportData(ASKII(k));
 764:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
 768:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 76c:	ac d2       	rcall	.+1368   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 76e:	bc 01       	movw	r22, r24
 770:	86 e8       	ldi	r24, 0x86	; 134
 772:	91 e0       	ldi	r25, 0x01	; 1
 774:	66 d1       	rcall	.+716    	; 0xa42 <_ZN3LCD10exportDataEi>
			lcd.exportData(ASKII(l));
 776:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
 77a:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 77e:	a3 d2       	rcall	.+1350   	; 0xcc6 <_ZN3MCU8Features5ASKIIEi>
 780:	bc 01       	movw	r22, r24
 782:	86 e8       	ldi	r24, 0x86	; 134
 784:	91 e0       	ldi	r25, 0x01	; 1
 786:	5d d1       	rcall	.+698    	; 0xa42 <_ZN3LCD10exportDataEi>
 788:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
			
			l--;
 78c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <__data_end+0x1>
 790:	01 97       	sbiw	r24, 0x01	; 1
 792:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <__data_end+0x1>
 796:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
 79a:	99 23       	and	r25, r25
			
			if (l < 0)
 79c:	7c f4       	brge	.+30     	; 0x7bc <__vector_12+0xd6>
 79e:	89 e0       	ldi	r24, 0x09	; 9
			{
				l = 9;
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <__data_end+0x1>
 7a6:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
 7aa:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
				k--;
 7ae:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 7b2:	01 97       	sbiw	r24, 0x01	; 1
 7b4:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <k+0x1>
 7b8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 7bc:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <k>
			}
			
			if (k < 0)
 7c0:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <k+0x1>
 7c4:	99 23       	and	r25, r25
 7c6:	7c f4       	brge	.+30     	; 0x7e6 <__vector_12+0x100>
 7c8:	85 e0       	ldi	r24, 0x05	; 5
			{
				k = 5;
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <k+0x1>
 7d0:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <k>
 7d4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
				j--;
 7d8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 7dc:	01 97       	sbiw	r24, 0x01	; 1
 7de:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <j+0x1>
 7e2:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <j>
 7e6:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <j>
			}
			
			if (j < 0)
 7ea:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <j+0x1>
 7ee:	99 23       	and	r25, r25
 7f0:	7c f4       	brge	.+30     	; 0x810 <__vector_12+0x12a>
 7f2:	89 e0       	ldi	r24, 0x09	; 9
			{
				j = 9;
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <j+0x1>
 7fa:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <j>
 7fe:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
				i--;
 802:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 806:	01 97       	sbiw	r24, 0x01	; 1
 808:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <i+0x1>
 80c:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <i>
 810:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <i>
			}
			
			if (i < 0)
 814:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <i+0x1>
 818:	99 23       	and	r25, r25
 81a:	0c f0       	brlt	.+2      	; 0x81e <__vector_12+0x138>
 81c:	3b c0       	rjmp	.+118    	; 0x894 <__vector_12+0x1ae>
 81e:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <i+0x1>
			{
				i = 0;
 822:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <i>
 826:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <j+0x1>
				j = 0;
 82a:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <j>
 82e:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <k+0x1>
				k = 0;
 832:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <k>
				l = 0;
 836:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <__data_end+0x1>
 83a:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end>
				
				lcd.clear(1);
 83e:	61 e0       	ldi	r22, 0x01	; 1
 840:	70 e0       	ldi	r23, 0x00	; 0
 842:	86 e8       	ldi	r24, 0x86	; 134
 844:	91 e0       	ldi	r25, 0x01	; 1
 846:	dc d1       	rcall	.+952    	; 0xc00 <_ZN3LCD5clearEi>
				
				lcd.setLine(1, 1);
 848:	41 e0       	ldi	r20, 0x01	; 1
 84a:	50 e0       	ldi	r21, 0x00	; 0
 84c:	61 e0       	ldi	r22, 0x01	; 1
 84e:	70 e0       	ldi	r23, 0x00	; 0
 850:	86 e8       	ldi	r24, 0x86	; 134
 852:	91 e0       	ldi	r25, 0x01	; 1
 854:	9f d1       	rcall	.+830    	; 0xb94 <_ZN3LCD7setLineEii>
				lcd.print("Done");
 856:	6c e5       	ldi	r22, 0x5C	; 92
 858:	71 e0       	ldi	r23, 0x01	; 1
 85a:	86 e8       	ldi	r24, 0x86	; 134
 85c:	91 e0       	ldi	r25, 0x01	; 1
 85e:	87 d1       	rcall	.+782    	; 0xb6e <_ZN3LCD5printEPKc>
 860:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <Start+0x1>
				
				Start = OFF;
 864:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <Start>
				Set = OFF;
 868:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <Set+0x1>
 86c:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <Set>
			
		}
		
		else
		{
			lcd.clear(1);
 870:	11 c0       	rjmp	.+34     	; 0x894 <__vector_12+0x1ae>
 872:	61 e0       	ldi	r22, 0x01	; 1
 874:	70 e0       	ldi	r23, 0x00	; 0
 876:	86 e8       	ldi	r24, 0x86	; 134
 878:	91 e0       	ldi	r25, 0x01	; 1
			
			lcd.setLine(1, 1);
 87a:	c2 d1       	rcall	.+900    	; 0xc00 <_ZN3LCD5clearEi>
 87c:	41 e0       	ldi	r20, 0x01	; 1
 87e:	50 e0       	ldi	r21, 0x00	; 0
 880:	61 e0       	ldi	r22, 0x01	; 1
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	86 e8       	ldi	r24, 0x86	; 134
 886:	91 e0       	ldi	r25, 0x01	; 1
 888:	85 d1       	rcall	.+778    	; 0xb94 <_ZN3LCD7setLineEii>
			lcd.print("Pause");
 88a:	61 e6       	ldi	r22, 0x61	; 97
 88c:	71 e0       	ldi	r23, 0x01	; 1
 88e:	86 e8       	ldi	r24, 0x86	; 134
 890:	91 e0       	ldi	r25, 0x01	; 1
 892:	6d d1       	rcall	.+730    	; 0xb6e <_ZN3LCD5printEPKc>
 894:	ff 91       	pop	r31
		}
	}
	
 896:	ef 91       	pop	r30
 898:	bf 91       	pop	r27
 89a:	af 91       	pop	r26
 89c:	9f 91       	pop	r25
 89e:	8f 91       	pop	r24
 8a0:	7f 91       	pop	r23
 8a2:	6f 91       	pop	r22
 8a4:	5f 91       	pop	r21
 8a6:	4f 91       	pop	r20
 8a8:	3f 91       	pop	r19
 8aa:	2f 91       	pop	r18
 8ac:	0f 90       	pop	r0
 8ae:	0b be       	out	0x3b, r0	; 59
 8b0:	0f 90       	pop	r0
 8b2:	0f be       	out	0x3f, r0	; 63
 8b4:	0f 90       	pop	r0
 8b6:	1f 90       	pop	r1
 8b8:	18 95       	reti

000008ba <_GLOBAL__sub_I_sw>:
 8ba:	6f ef       	ldi	r22, 0xFF	; 255
 8bc:	7f ef       	ldi	r23, 0xFF	; 255
 8be:	81 e0       	ldi	r24, 0x01	; 1
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	0d cc       	rjmp	.-2022   	; 0xde <_Z41__static_initialization_and_destruction_0ii>
 8c4:	08 95       	ret

000008c6 <_ZN3LCD10attachPortEi>:
//----------------------------------------*/

void LCD::attachPort (int portValue)
{
	
	switch (m_LCDPort)
 8c6:	fc 01       	movw	r30, r24
 8c8:	80 81       	ld	r24, Z
 8ca:	91 81       	ldd	r25, Z+1	; 0x01
 8cc:	82 30       	cpi	r24, 0x02	; 2
 8ce:	91 05       	cpc	r25, r1
 8d0:	89 f0       	breq	.+34     	; 0x8f4 <_ZN3LCD10attachPortEi+0x2e>
 8d2:	28 f4       	brcc	.+10     	; 0x8de <_ZN3LCD10attachPortEi+0x18>
 8d4:	00 97       	sbiw	r24, 0x00	; 0
 8d6:	51 f0       	breq	.+20     	; 0x8ec <_ZN3LCD10attachPortEi+0x26>
 8d8:	01 97       	sbiw	r24, 0x01	; 1
 8da:	51 f0       	breq	.+20     	; 0x8f0 <_ZN3LCD10attachPortEi+0x2a>
 8dc:	08 95       	ret
 8de:	84 30       	cpi	r24, 0x04	; 4
 8e0:	91 05       	cpc	r25, r1
 8e2:	61 f0       	breq	.+24     	; 0x8fc <_ZN3LCD10attachPortEi+0x36>
 8e4:	48 f0       	brcs	.+18     	; 0x8f8 <_ZN3LCD10attachPortEi+0x32>
 8e6:	05 97       	sbiw	r24, 0x05	; 5
 8e8:	59 f0       	breq	.+22     	; 0x900 <_ZN3LCD10attachPortEi+0x3a>
 8ea:	08 95       	ret
	{
		// PORTA
		case A:
			PORTA = portValue;
 8ec:	6b bb       	out	0x1b, r22	; 27
			break;
 8ee:	08 95       	ret
		
		// PORTB
		case B:
			PORTB = portValue;
 8f0:	68 bb       	out	0x18, r22	; 24
			break;
 8f2:	08 95       	ret
		
		// PORTC
		case C:
			PORTC = portValue;
 8f4:	65 bb       	out	0x15, r22	; 21
			break;
 8f6:	08 95       	ret
		
		// PORTD
		case D:
			PORTD = portValue;
 8f8:	62 bb       	out	0x12, r22	; 18
			break;
 8fa:	08 95       	ret
		
		// PORTE
		case E:
			PORTE = portValue;
 8fc:	63 b9       	out	0x03, r22	; 3
			break;
 8fe:	08 95       	ret
		
		// PORTF
		case F:
			PORTF = portValue;
 900:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 904:	08 95       	ret

00000906 <_ZN3LCD16attachExtendPortEi>:
//----------------------------------------*/

void LCD::attachExtendPort (int extendPortValue)
{
	
	switch (m_ExtendPort)
 906:	fc 01       	movw	r30, r24
 908:	82 81       	ldd	r24, Z+2	; 0x02
 90a:	93 81       	ldd	r25, Z+3	; 0x03
 90c:	82 30       	cpi	r24, 0x02	; 2
 90e:	91 05       	cpc	r25, r1
 910:	89 f0       	breq	.+34     	; 0x934 <_ZN3LCD16attachExtendPortEi+0x2e>
 912:	28 f4       	brcc	.+10     	; 0x91e <_ZN3LCD16attachExtendPortEi+0x18>
 914:	00 97       	sbiw	r24, 0x00	; 0
 916:	51 f0       	breq	.+20     	; 0x92c <_ZN3LCD16attachExtendPortEi+0x26>
 918:	01 97       	sbiw	r24, 0x01	; 1
 91a:	51 f0       	breq	.+20     	; 0x930 <_ZN3LCD16attachExtendPortEi+0x2a>
 91c:	08 95       	ret
 91e:	84 30       	cpi	r24, 0x04	; 4
 920:	91 05       	cpc	r25, r1
 922:	61 f0       	breq	.+24     	; 0x93c <_ZN3LCD16attachExtendPortEi+0x36>
 924:	48 f0       	brcs	.+18     	; 0x938 <_ZN3LCD16attachExtendPortEi+0x32>
 926:	05 97       	sbiw	r24, 0x05	; 5
 928:	59 f0       	breq	.+22     	; 0x940 <_ZN3LCD16attachExtendPortEi+0x3a>
 92a:	08 95       	ret
	{
		// PORTA
		case A:
			PORTA = extendPortValue;
 92c:	6b bb       	out	0x1b, r22	; 27
			break;
 92e:	08 95       	ret
		
		// PORTB
		case B:
			PORTB = extendPortValue;
 930:	68 bb       	out	0x18, r22	; 24
			break;
 932:	08 95       	ret
		
		// PORTC
		case C:
			PORTC = extendPortValue;
 934:	65 bb       	out	0x15, r22	; 21
			break;
 936:	08 95       	ret
		
		// PORTD
		case D:
			PORTD = extendPortValue;
 938:	62 bb       	out	0x12, r22	; 18
			break;
 93a:	08 95       	ret
		
		// PORTE
		case E:
			PORTE = extendPortValue;
 93c:	63 b9       	out	0x03, r22	; 3
			break;
 93e:	08 95       	ret
		
		// PORTF
		case F:
			PORTF = extendPortValue;
 940:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 944:	08 95       	ret

00000946 <_ZN3LCD17exportInstructionEi>:
/*----------------------------------------//
			 Export Instruction
//----------------------------------------*/

void LCD::exportInstruction (int instructionValue)
{
 946:	af 92       	push	r10
 948:	bf 92       	push	r11
 94a:	cf 92       	push	r12
 94c:	df 92       	push	r13
 94e:	ef 92       	push	r14
 950:	ff 92       	push	r15
 952:	0f 93       	push	r16
 954:	1f 93       	push	r17
 956:	cf 93       	push	r28
 958:	df 93       	push	r29
 95a:	ec 01       	movw	r28, r24
 95c:	8b 01       	movw	r16, r22
	
	if (m_isDataLong == false)
 95e:	8c 81       	ldd	r24, Y+4	; 0x04
 960:	81 11       	cpse	r24, r1
 962:	43 c0       	rjmp	.+134    	; 0x9ea <_ZN3LCD17exportInstructionEi+0xa4>
	{
		int enableBit = insertBit(7, HIGH);
 964:	61 e0       	ldi	r22, 0x01	; 1
 966:	87 e0       	ldi	r24, 0x07	; 7
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	9e d1       	rcall	.+828    	; 0xca8 <_ZN3MCU9insertBitEib>
 96c:	6c 01       	movw	r12, r24
		int disableBit = insertBit(7, LOW);
 96e:	60 e0       	ldi	r22, 0x00	; 0
 970:	87 e0       	ldi	r24, 0x07	; 7
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	99 d1       	rcall	.+818    	; 0xca8 <_ZN3MCU9insertBitEib>
 976:	5c 01       	movw	r10, r24
 978:	8f e3       	ldi	r24, 0x3F	; 63
 97a:	9f e1       	ldi	r25, 0x1F	; 31
 97c:	01 97       	sbiw	r24, 0x01	; 1
 97e:	f1 f7       	brne	.-4      	; 0x97c <_ZN3LCD17exportInstructionEi+0x36>
 980:	00 c0       	rjmp	.+0      	; 0x982 <_ZN3LCD17exportInstructionEi+0x3c>
 982:	00 00       	nop
		
		_delay_ms(2);
		
		attachPort( ((instructionValue >> 4) & 0x0F) | enableBit );
 984:	78 01       	movw	r14, r16
 986:	f5 94       	asr	r15
 988:	e7 94       	ror	r14
 98a:	f5 94       	asr	r15
 98c:	e7 94       	ror	r14
 98e:	f5 94       	asr	r15
 990:	e7 94       	ror	r14
 992:	f5 94       	asr	r15
 994:	e7 94       	ror	r14
 996:	9f e0       	ldi	r25, 0x0F	; 15
 998:	e9 22       	and	r14, r25
 99a:	ff 24       	eor	r15, r15
 99c:	b6 01       	movw	r22, r12
 99e:	6e 29       	or	r22, r14
 9a0:	7f 29       	or	r23, r15
 9a2:	ce 01       	movw	r24, r28
 9a4:	90 df       	rcall	.-224    	; 0x8c6 <_ZN3LCD10attachPortEi>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 9a6:	85 e0       	ldi	r24, 0x05	; 5
 9a8:	8a 95       	dec	r24
 9aa:	f1 f7       	brne	.-4      	; 0x9a8 <_ZN3LCD17exportInstructionEi+0x62>
 9ac:	00 00       	nop
		_delay_us(1);
		attachPort( ((instructionValue >> 4) & 0x0F) | disableBit );
 9ae:	b5 01       	movw	r22, r10
 9b0:	6e 29       	or	r22, r14
 9b2:	7f 29       	or	r23, r15
 9b4:	ce 01       	movw	r24, r28
 9b6:	87 df       	rcall	.-242    	; 0x8c6 <_ZN3LCD10attachPortEi>
 9b8:	95 e0       	ldi	r25, 0x05	; 5
 9ba:	9a 95       	dec	r25
 9bc:	f1 f7       	brne	.-4      	; 0x9ba <_ZN3LCD17exportInstructionEi+0x74>
 9be:	00 00       	nop
		_delay_us(1);
		
		
		attachPort( (instructionValue & 0x0F) | enableBit );
 9c0:	0f 70       	andi	r16, 0x0F	; 15
 9c2:	11 27       	eor	r17, r17
 9c4:	b6 01       	movw	r22, r12
 9c6:	60 2b       	or	r22, r16
 9c8:	71 2b       	or	r23, r17
 9ca:	ce 01       	movw	r24, r28
 9cc:	7c df       	rcall	.-264    	; 0x8c6 <_ZN3LCD10attachPortEi>
 9ce:	85 e0       	ldi	r24, 0x05	; 5
 9d0:	8a 95       	dec	r24
 9d2:	f1 f7       	brne	.-4      	; 0x9d0 <_ZN3LCD17exportInstructionEi+0x8a>
		_delay_us(1);
		attachPort( (instructionValue & 0x0F) | disableBit );
 9d4:	00 00       	nop
 9d6:	b5 01       	movw	r22, r10
 9d8:	60 2b       	or	r22, r16
 9da:	71 2b       	or	r23, r17
 9dc:	ce 01       	movw	r24, r28
 9de:	73 df       	rcall	.-282    	; 0x8c6 <_ZN3LCD10attachPortEi>
 9e0:	95 e0       	ldi	r25, 0x05	; 5
 9e2:	9a 95       	dec	r25
 9e4:	f1 f7       	brne	.-4      	; 0x9e2 <_ZN3LCD17exportInstructionEi+0x9c>
 9e6:	00 00       	nop
		_delay_us(1);
	}
	
	else
	{
		int enableBit = insertBit(2, HIGH);
 9e8:	21 c0       	rjmp	.+66     	; 0xa2c <_ZN3LCD17exportInstructionEi+0xe6>
 9ea:	61 e0       	ldi	r22, 0x01	; 1
 9ec:	82 e0       	ldi	r24, 0x02	; 2
 9ee:	90 e0       	ldi	r25, 0x00	; 0
 9f0:	5b d1       	rcall	.+694    	; 0xca8 <_ZN3MCU9insertBitEib>
		int disableBit = insertBit(2, LOW);
 9f2:	6c 01       	movw	r12, r24
 9f4:	60 e0       	ldi	r22, 0x00	; 0
 9f6:	82 e0       	ldi	r24, 0x02	; 2
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	56 d1       	rcall	.+684    	; 0xca8 <_ZN3MCU9insertBitEib>
 9fc:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 9fe:	8f e3       	ldi	r24, 0x3F	; 63
 a00:	9f e1       	ldi	r25, 0x1F	; 31
 a02:	01 97       	sbiw	r24, 0x01	; 1
 a04:	f1 f7       	brne	.-4      	; 0xa02 <_ZN3LCD17exportInstructionEi+0xbc>
		
		_delay_ms(2);
		
		attachExtendPort(instructionValue);
 a06:	00 c0       	rjmp	.+0      	; 0xa08 <_ZN3LCD17exportInstructionEi+0xc2>
 a08:	00 00       	nop
 a0a:	b8 01       	movw	r22, r16
 a0c:	ce 01       	movw	r24, r28
		
		attachPort(enableBit);
 a0e:	7b df       	rcall	.-266    	; 0x906 <_ZN3LCD16attachExtendPortEi>
 a10:	b6 01       	movw	r22, r12
 a12:	ce 01       	movw	r24, r28
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a14:	58 df       	rcall	.-336    	; 0x8c6 <_ZN3LCD10attachPortEi>
 a16:	95 e0       	ldi	r25, 0x05	; 5
 a18:	9a 95       	dec	r25
 a1a:	f1 f7       	brne	.-4      	; 0xa18 <_ZN3LCD17exportInstructionEi+0xd2>
		_delay_us(1);
		attachPort(disableBit);
 a1c:	00 00       	nop
 a1e:	b7 01       	movw	r22, r14
 a20:	ce 01       	movw	r24, r28
 a22:	51 df       	rcall	.-350    	; 0x8c6 <_ZN3LCD10attachPortEi>
 a24:	85 e0       	ldi	r24, 0x05	; 5
 a26:	8a 95       	dec	r24
 a28:	f1 f7       	brne	.-4      	; 0xa26 <_ZN3LCD17exportInstructionEi+0xe0>
 a2a:	00 00       	nop
		_delay_us(1);
	}
	
}
 a2c:	df 91       	pop	r29
 a2e:	cf 91       	pop	r28
 a30:	1f 91       	pop	r17
 a32:	0f 91       	pop	r16
 a34:	ff 90       	pop	r15
 a36:	ef 90       	pop	r14
 a38:	df 90       	pop	r13
 a3a:	cf 90       	pop	r12
 a3c:	bf 90       	pop	r11
 a3e:	af 90       	pop	r10
 a40:	08 95       	ret

00000a42 <_ZN3LCD10exportDataEi>:
/*----------------------------------------//
				Export Data
//----------------------------------------*/

void LCD::exportData (int dataValue)
{
 a42:	af 92       	push	r10
 a44:	bf 92       	push	r11
 a46:	cf 92       	push	r12
 a48:	df 92       	push	r13
 a4a:	ef 92       	push	r14
 a4c:	ff 92       	push	r15
 a4e:	0f 93       	push	r16
 a50:	1f 93       	push	r17
 a52:	cf 93       	push	r28
 a54:	df 93       	push	r29
 a56:	ec 01       	movw	r28, r24
 a58:	8b 01       	movw	r16, r22
	
	if (m_isDataLong == false)
 a5a:	8c 81       	ldd	r24, Y+4	; 0x04
 a5c:	81 11       	cpse	r24, r1
 a5e:	4f c0       	rjmp	.+158    	; 0xafe <_ZN3LCD10exportDataEi+0xbc>
	{
		int enableBit = insertBit(7, HIGH) | insertBit(5, HIGH);
 a60:	61 e0       	ldi	r22, 0x01	; 1
 a62:	87 e0       	ldi	r24, 0x07	; 7
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	20 d1       	rcall	.+576    	; 0xca8 <_ZN3MCU9insertBitEib>
 a68:	7c 01       	movw	r14, r24
 a6a:	61 e0       	ldi	r22, 0x01	; 1
 a6c:	85 e0       	ldi	r24, 0x05	; 5
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	1b d1       	rcall	.+566    	; 0xca8 <_ZN3MCU9insertBitEib>
 a72:	e8 2a       	or	r14, r24
 a74:	f9 2a       	or	r15, r25
		int disableBit = insertBit(7, LOW) | insertBit(5, HIGH);
 a76:	60 e0       	ldi	r22, 0x00	; 0
 a78:	87 e0       	ldi	r24, 0x07	; 7
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	15 d1       	rcall	.+554    	; 0xca8 <_ZN3MCU9insertBitEib>
 a7e:	5c 01       	movw	r10, r24
 a80:	61 e0       	ldi	r22, 0x01	; 1
 a82:	85 e0       	ldi	r24, 0x05	; 5
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	10 d1       	rcall	.+544    	; 0xca8 <_ZN3MCU9insertBitEib>
 a88:	a8 2a       	or	r10, r24
 a8a:	b9 2a       	or	r11, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a8c:	8f e3       	ldi	r24, 0x3F	; 63
 a8e:	9f e1       	ldi	r25, 0x1F	; 31
 a90:	01 97       	sbiw	r24, 0x01	; 1
 a92:	f1 f7       	brne	.-4      	; 0xa90 <_ZN3LCD10exportDataEi+0x4e>
 a94:	00 c0       	rjmp	.+0      	; 0xa96 <_ZN3LCD10exportDataEi+0x54>
 a96:	00 00       	nop
		
		_delay_ms(2);
		
		attachPort( ((dataValue >> 4) & 0x0F) | enableBit );
 a98:	68 01       	movw	r12, r16
 a9a:	d5 94       	asr	r13
 a9c:	c7 94       	ror	r12
 a9e:	d5 94       	asr	r13
 aa0:	c7 94       	ror	r12
 aa2:	d5 94       	asr	r13
 aa4:	c7 94       	ror	r12
 aa6:	d5 94       	asr	r13
 aa8:	c7 94       	ror	r12
 aaa:	9f e0       	ldi	r25, 0x0F	; 15
 aac:	c9 22       	and	r12, r25
 aae:	dd 24       	eor	r13, r13
 ab0:	b7 01       	movw	r22, r14
 ab2:	6c 29       	or	r22, r12
 ab4:	7d 29       	or	r23, r13
 ab6:	ce 01       	movw	r24, r28
 ab8:	06 df       	rcall	.-500    	; 0x8c6 <_ZN3LCD10attachPortEi>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 aba:	85 e0       	ldi	r24, 0x05	; 5
 abc:	8a 95       	dec	r24
 abe:	f1 f7       	brne	.-4      	; 0xabc <_ZN3LCD10exportDataEi+0x7a>
		_delay_us(1);
		attachPort( ((dataValue >> 4) & 0x0F) | disableBit );
 ac0:	00 00       	nop
 ac2:	b5 01       	movw	r22, r10
 ac4:	6c 29       	or	r22, r12
 ac6:	7d 29       	or	r23, r13
 ac8:	ce 01       	movw	r24, r28
 aca:	fd de       	rcall	.-518    	; 0x8c6 <_ZN3LCD10attachPortEi>
 acc:	95 e0       	ldi	r25, 0x05	; 5
 ace:	9a 95       	dec	r25
 ad0:	f1 f7       	brne	.-4      	; 0xace <_ZN3LCD10exportDataEi+0x8c>
 ad2:	00 00       	nop
		_delay_us(1);
		
		
		attachPort( (dataValue & 0x0F) | enableBit );
 ad4:	0f 70       	andi	r16, 0x0F	; 15
 ad6:	11 27       	eor	r17, r17
 ad8:	b7 01       	movw	r22, r14
 ada:	60 2b       	or	r22, r16
 adc:	71 2b       	or	r23, r17
 ade:	ce 01       	movw	r24, r28
 ae0:	f2 de       	rcall	.-540    	; 0x8c6 <_ZN3LCD10attachPortEi>
 ae2:	85 e0       	ldi	r24, 0x05	; 5
 ae4:	8a 95       	dec	r24
 ae6:	f1 f7       	brne	.-4      	; 0xae4 <_ZN3LCD10exportDataEi+0xa2>
		_delay_us(1);
		attachPort( (dataValue & 0x0F) | disableBit );
 ae8:	00 00       	nop
 aea:	b5 01       	movw	r22, r10
 aec:	60 2b       	or	r22, r16
 aee:	71 2b       	or	r23, r17
 af0:	ce 01       	movw	r24, r28
 af2:	e9 de       	rcall	.-558    	; 0x8c6 <_ZN3LCD10attachPortEi>
 af4:	95 e0       	ldi	r25, 0x05	; 5
 af6:	9a 95       	dec	r25
 af8:	f1 f7       	brne	.-4      	; 0xaf6 <_ZN3LCD10exportDataEi+0xb4>
 afa:	00 00       	nop
		_delay_us(1);
	}
	
	else
	{
		int enableBit = insertBit(2, HIGH) | insertBit(0, HIGH);
 afc:	2d c0       	rjmp	.+90     	; 0xb58 <_ZN3LCD10exportDataEi+0x116>
 afe:	61 e0       	ldi	r22, 0x01	; 1
 b00:	82 e0       	ldi	r24, 0x02	; 2
 b02:	90 e0       	ldi	r25, 0x00	; 0
 b04:	d1 d0       	rcall	.+418    	; 0xca8 <_ZN3MCU9insertBitEib>
 b06:	6c 01       	movw	r12, r24
 b08:	61 e0       	ldi	r22, 0x01	; 1
 b0a:	80 e0       	ldi	r24, 0x00	; 0
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	cc d0       	rcall	.+408    	; 0xca8 <_ZN3MCU9insertBitEib>
 b10:	c8 2a       	or	r12, r24
		int disableBit = insertBit(2, LOW) | insertBit(0, HIGH);
 b12:	d9 2a       	or	r13, r25
 b14:	60 e0       	ldi	r22, 0x00	; 0
 b16:	82 e0       	ldi	r24, 0x02	; 2
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	c6 d0       	rcall	.+396    	; 0xca8 <_ZN3MCU9insertBitEib>
 b1c:	7c 01       	movw	r14, r24
 b1e:	61 e0       	ldi	r22, 0x01	; 1
 b20:	80 e0       	ldi	r24, 0x00	; 0
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	c1 d0       	rcall	.+386    	; 0xca8 <_ZN3MCU9insertBitEib>
 b26:	e8 2a       	or	r14, r24
 b28:	f9 2a       	or	r15, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 b2a:	8f e3       	ldi	r24, 0x3F	; 63
 b2c:	9f e1       	ldi	r25, 0x1F	; 31
 b2e:	01 97       	sbiw	r24, 0x01	; 1
 b30:	f1 f7       	brne	.-4      	; 0xb2e <_ZN3LCD10exportDataEi+0xec>
 b32:	00 c0       	rjmp	.+0      	; 0xb34 <_ZN3LCD10exportDataEi+0xf2>
 b34:	00 00       	nop
		
		_delay_ms(2);
		
		attachExtendPort(dataValue);
 b36:	b8 01       	movw	r22, r16
 b38:	ce 01       	movw	r24, r28
 b3a:	e5 de       	rcall	.-566    	; 0x906 <_ZN3LCD16attachExtendPortEi>
		
		attachPort(enableBit);
 b3c:	b6 01       	movw	r22, r12
 b3e:	ce 01       	movw	r24, r28
 b40:	c2 de       	rcall	.-636    	; 0x8c6 <_ZN3LCD10attachPortEi>
 b42:	95 e0       	ldi	r25, 0x05	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 b44:	9a 95       	dec	r25
 b46:	f1 f7       	brne	.-4      	; 0xb44 <_ZN3LCD10exportDataEi+0x102>
 b48:	00 00       	nop
 b4a:	b7 01       	movw	r22, r14
		_delay_us(1);
		attachPort(disableBit);
 b4c:	ce 01       	movw	r24, r28
 b4e:	bb de       	rcall	.-650    	; 0x8c6 <_ZN3LCD10attachPortEi>
 b50:	85 e0       	ldi	r24, 0x05	; 5
 b52:	8a 95       	dec	r24
 b54:	f1 f7       	brne	.-4      	; 0xb52 <_ZN3LCD10exportDataEi+0x110>
 b56:	00 00       	nop
 b58:	df 91       	pop	r29
 b5a:	cf 91       	pop	r28
		_delay_us(1);
	}
	
}
 b5c:	1f 91       	pop	r17
 b5e:	0f 91       	pop	r16
 b60:	ff 90       	pop	r15
 b62:	ef 90       	pop	r14
 b64:	df 90       	pop	r13
 b66:	cf 90       	pop	r12
 b68:	bf 90       	pop	r11
 b6a:	af 90       	pop	r10
 b6c:	08 95       	ret

00000b6e <_ZN3LCD5printEPKc>:
 b6e:	0f 93       	push	r16
 b70:	1f 93       	push	r17
/*----------------------------------------//
				Print String
//----------------------------------------*/

void LCD::print (String stringValue)
{
 b72:	cf 93       	push	r28
 b74:	df 93       	push	r29
 b76:	8c 01       	movw	r16, r24
 b78:	eb 01       	movw	r28, r22
	
	while (*stringValue != '\0')
 b7a:	68 81       	ld	r22, Y
 b7c:	66 23       	and	r22, r22
 b7e:	29 f0       	breq	.+10     	; 0xb8a <_ZN3LCD5printEPKc+0x1c>
	{
		exportData(*stringValue);
 b80:	70 e0       	ldi	r23, 0x00	; 0
 b82:	c8 01       	movw	r24, r16
 b84:	5e df       	rcall	.-324    	; 0xa42 <_ZN3LCD10exportDataEi>
		stringValue ++;
 b86:	21 96       	adiw	r28, 0x01	; 1
//----------------------------------------*/

void LCD::print (String stringValue)
{
	
	while (*stringValue != '\0')
 b88:	f8 cf       	rjmp	.-16     	; 0xb7a <_ZN3LCD5printEPKc+0xc>
	{
		exportData(*stringValue);
		stringValue ++;
	}
	
}
 b8a:	df 91       	pop	r29
 b8c:	cf 91       	pop	r28
 b8e:	1f 91       	pop	r17
 b90:	0f 91       	pop	r16
 b92:	08 95       	ret

00000b94 <_ZN3LCD7setLineEii>:
/*----------------------------------------//
				  Set Line
//----------------------------------------*/

void LCD::setLine (int lineIndex, int fileIndex)
{
 b94:	cf 92       	push	r12
 b96:	df 92       	push	r13
 b98:	ef 92       	push	r14
 b9a:	ff 92       	push	r15
 b9c:	0f 93       	push	r16
 b9e:	1f 93       	push	r17
 ba0:	cf 93       	push	r28
 ba2:	df 93       	push	r29
 ba4:	6c 01       	movw	r12, r24
 ba6:	8b 01       	movw	r16, r22
 ba8:	7a 01       	movw	r14, r20
	
	for (int i=0; i<16; i++)
 baa:	c0 e0       	ldi	r28, 0x00	; 0
 bac:	d0 e0       	ldi	r29, 0x00	; 0
 bae:	c0 31       	cpi	r28, 0x10	; 16
 bb0:	d1 05       	cpc	r29, r1
 bb2:	ec f4       	brge	.+58     	; 0xbee <_ZN3LCD7setLineEii+0x5a>
	{
		if (lineIndex == 1 && fileIndex == (i + 1))
 bb4:	01 30       	cpi	r16, 0x01	; 1
 bb6:	11 05       	cpc	r17, r1
 bb8:	59 f4       	brne	.+22     	; 0xbd0 <_ZN3LCD7setLineEii+0x3c>
 bba:	ce 01       	movw	r24, r28
 bbc:	01 96       	adiw	r24, 0x01	; 1
 bbe:	8e 15       	cp	r24, r14
 bc0:	9f 05       	cpc	r25, r15
 bc2:	31 f4       	brne	.+12     	; 0xbd0 <_ZN3LCD7setLineEii+0x3c>
		{
			int sendValue = 0x80 + i;
 bc4:	be 01       	movw	r22, r28
 bc6:	60 58       	subi	r22, 0x80	; 128
 bc8:	7f 4f       	sbci	r23, 0xFF	; 255
			
			exportInstruction(sendValue);
 bca:	c6 01       	movw	r24, r12
 bcc:	bc de       	rcall	.-648    	; 0x946 <_ZN3LCD17exportInstructionEi>
 bce:	0d c0       	rjmp	.+26     	; 0xbea <_ZN3LCD7setLineEii+0x56>
		}
		
		else if (lineIndex == 2 && fileIndex == (i + 1))
 bd0:	02 30       	cpi	r16, 0x02	; 2
 bd2:	11 05       	cpc	r17, r1
 bd4:	51 f4       	brne	.+20     	; 0xbea <_ZN3LCD7setLineEii+0x56>
 bd6:	ce 01       	movw	r24, r28
 bd8:	01 96       	adiw	r24, 0x01	; 1
 bda:	e8 16       	cp	r14, r24
 bdc:	f9 06       	cpc	r15, r25
 bde:	29 f4       	brne	.+10     	; 0xbea <_ZN3LCD7setLineEii+0x56>
		{
			int sendValue = 0xC0 + i;
 be0:	be 01       	movw	r22, r28
 be2:	60 54       	subi	r22, 0x40	; 64
 be4:	7f 4f       	sbci	r23, 0xFF	; 255
			
			exportInstruction(sendValue);
 be6:	c6 01       	movw	r24, r12
 be8:	ae de       	rcall	.-676    	; 0x946 <_ZN3LCD17exportInstructionEi>
//----------------------------------------*/

void LCD::setLine (int lineIndex, int fileIndex)
{
	
	for (int i=0; i<16; i++)
 bea:	21 96       	adiw	r28, 0x01	; 1
 bec:	e0 cf       	rjmp	.-64     	; 0xbae <_ZN3LCD7setLineEii+0x1a>
			
			exportInstruction(sendValue);
		}
	}
	
}
 bee:	df 91       	pop	r29
 bf0:	cf 91       	pop	r28
 bf2:	1f 91       	pop	r17
 bf4:	0f 91       	pop	r16
 bf6:	ff 90       	pop	r15
 bf8:	ef 90       	pop	r14
 bfa:	df 90       	pop	r13
 bfc:	cf 90       	pop	r12
 bfe:	08 95       	ret

00000c00 <_ZN3LCD5clearEi>:
/*----------------------------------------//
				 Clear Line
//----------------------------------------*/

void LCD::clear (int clearMode)
{
 c00:	cf 93       	push	r28
 c02:	df 93       	push	r29
 c04:	ec 01       	movw	r28, r24
	
	if (clearMode == ALL)
 c06:	69 30       	cpi	r22, 0x09	; 9
 c08:	71 05       	cpc	r23, r1
 c0a:	a1 f4       	brne	.+40     	; 0xc34 <_ZN3LCD5clearEi+0x34>
	{
		setLine(1, 1);
 c0c:	41 e0       	ldi	r20, 0x01	; 1
 c0e:	50 e0       	ldi	r21, 0x00	; 0
 c10:	61 e0       	ldi	r22, 0x01	; 1
 c12:	70 e0       	ldi	r23, 0x00	; 0
 c14:	bf df       	rcall	.-130    	; 0xb94 <_ZN3LCD7setLineEii>
		print("                ");
 c16:	67 e6       	ldi	r22, 0x67	; 103
 c18:	71 e0       	ldi	r23, 0x01	; 1
 c1a:	ce 01       	movw	r24, r28
 c1c:	a8 df       	rcall	.-176    	; 0xb6e <_ZN3LCD5printEPKc>
		
		setLine(2, 1);
 c1e:	41 e0       	ldi	r20, 0x01	; 1
 c20:	50 e0       	ldi	r21, 0x00	; 0
 c22:	62 e0       	ldi	r22, 0x02	; 2
 c24:	70 e0       	ldi	r23, 0x00	; 0
 c26:	ce 01       	movw	r24, r28
 c28:	b5 df       	rcall	.-150    	; 0xb94 <_ZN3LCD7setLineEii>
		print("                ");
 c2a:	67 e6       	ldi	r22, 0x67	; 103
 c2c:	71 e0       	ldi	r23, 0x01	; 1
 c2e:	ce 01       	movw	r24, r28
 c30:	9e df       	rcall	.-196    	; 0xb6e <_ZN3LCD5printEPKc>
 c32:	19 c0       	rjmp	.+50     	; 0xc66 <_ZN3LCD5clearEi+0x66>
	}
	
	else if (clearMode == 1)
 c34:	61 30       	cpi	r22, 0x01	; 1
 c36:	71 05       	cpc	r23, r1
 c38:	51 f4       	brne	.+20     	; 0xc4e <_ZN3LCD5clearEi+0x4e>
	{
		setLine(1, 1);
 c3a:	41 e0       	ldi	r20, 0x01	; 1
 c3c:	50 e0       	ldi	r21, 0x00	; 0
 c3e:	61 e0       	ldi	r22, 0x01	; 1
 c40:	70 e0       	ldi	r23, 0x00	; 0
		print("                ");
 c42:	a8 df       	rcall	.-176    	; 0xb94 <_ZN3LCD7setLineEii>
 c44:	67 e6       	ldi	r22, 0x67	; 103
 c46:	71 e0       	ldi	r23, 0x01	; 1
 c48:	ce 01       	movw	r24, r28
 c4a:	91 df       	rcall	.-222    	; 0xb6e <_ZN3LCD5printEPKc>
 c4c:	0c c0       	rjmp	.+24     	; 0xc66 <_ZN3LCD5clearEi+0x66>
	}
	
	else if (clearMode == 2)
 c4e:	62 30       	cpi	r22, 0x02	; 2
 c50:	71 05       	cpc	r23, r1
	{
		setLine(2, 1);
 c52:	49 f4       	brne	.+18     	; 0xc66 <_ZN3LCD5clearEi+0x66>
 c54:	41 e0       	ldi	r20, 0x01	; 1
 c56:	50 e0       	ldi	r21, 0x00	; 0
 c58:	62 e0       	ldi	r22, 0x02	; 2
 c5a:	70 e0       	ldi	r23, 0x00	; 0
		print("                ");
 c5c:	9b df       	rcall	.-202    	; 0xb94 <_ZN3LCD7setLineEii>
 c5e:	67 e6       	ldi	r22, 0x67	; 103
 c60:	71 e0       	ldi	r23, 0x01	; 1
 c62:	ce 01       	movw	r24, r28
 c64:	84 df       	rcall	.-248    	; 0xb6e <_ZN3LCD5printEPKc>
	}
	
}
 c66:	df 91       	pop	r29
 c68:	cf 91       	pop	r28
 c6a:	08 95       	ret

00000c6c <_ZN3LCD4initEv>:
/*----------------------------------------//
			  Initialize LCD
//----------------------------------------*/

void LCD::init (void)
{
 c6c:	cf 93       	push	r28
 c6e:	df 93       	push	r29
 c70:	ec 01       	movw	r28, r24
	
	if (m_isDataLong == false)
 c72:	8c 81       	ldd	r24, Y+4	; 0x04
 c74:	81 11       	cpse	r24, r1
 c76:	05 c0       	rjmp	.+10     	; 0xc82 <_ZN3LCD4initEv+0x16>
	{
		exportInstruction(0x28);			// Set Function		[ DL = 4 Bit		N = 2 LINE		F = 5 x 7	]
 c78:	68 e2       	ldi	r22, 0x28	; 40
 c7a:	70 e0       	ldi	r23, 0x00	; 0
 c7c:	ce 01       	movw	r24, r28
 c7e:	63 de       	rcall	.-826    	; 0x946 <_ZN3LCD17exportInstructionEi>
 c80:	04 c0       	rjmp	.+8      	; 0xc8a <_ZN3LCD4initEv+0x1e>
	}
	
	else
	{
		exportInstruction(0x38);			// Set Function		[ DL = 8 Bit		N = 2 LINE		F = 5 x 7	]
 c82:	68 e3       	ldi	r22, 0x38	; 56
 c84:	70 e0       	ldi	r23, 0x00	; 0
 c86:	ce 01       	movw	r24, r28
 c88:	5e de       	rcall	.-836    	; 0x946 <_ZN3LCD17exportInstructionEi>
	}
	
	exportInstruction(0x0C);				// Control Display	[ D = Display H		C = Cursor L	B = Blink L ]
 c8a:	6c e0       	ldi	r22, 0x0C	; 12
 c8c:	70 e0       	ldi	r23, 0x00	; 0
 c8e:	ce 01       	movw	r24, r28
 c90:	5a de       	rcall	.-844    	; 0x946 <_ZN3LCD17exportInstructionEi>
	exportInstruction(0x06);				// Set Entry Mode	[ I/D = Right						S = Shift L	]
 c92:	66 e0       	ldi	r22, 0x06	; 6
 c94:	70 e0       	ldi	r23, 0x00	; 0
 c96:	ce 01       	movw	r24, r28
 c98:	56 de       	rcall	.-852    	; 0x946 <_ZN3LCD17exportInstructionEi>
	exportInstruction(0x01);				// Clear Display
 c9a:	61 e0       	ldi	r22, 0x01	; 1
 c9c:	70 e0       	ldi	r23, 0x00	; 0
 c9e:	ce 01       	movw	r24, r28
 ca0:	52 de       	rcall	.-860    	; 0x946 <_ZN3LCD17exportInstructionEi>
 ca2:	df 91       	pop	r29
	
 ca4:	cf 91       	pop	r28
 ca6:	08 95       	ret

00000ca8 <_ZN3MCU9insertBitEib>:
 ca8:	66 23       	and	r22, r22
	else if (extendIndex >= 4)
	{
		EICRB = 0x00;
	}
	
}
 caa:	51 f0       	breq	.+20     	; 0xcc0 <_ZN3MCU9insertBitEib+0x18>
 cac:	21 e0       	ldi	r18, 0x01	; 1
 cae:	30 e0       	ldi	r19, 0x00	; 0
 cb0:	a9 01       	movw	r20, r18
 cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <_ZN3MCU9insertBitEib+0x10>
 cb4:	44 0f       	add	r20, r20
 cb6:	55 1f       	adc	r21, r21
 cb8:	8a 95       	dec	r24
 cba:	e2 f7       	brpl	.-8      	; 0xcb4 <_ZN3MCU9insertBitEib+0xc>
 cbc:	ca 01       	movw	r24, r20
 cbe:	08 95       	ret
 cc0:	80 e0       	ldi	r24, 0x00	; 0
 cc2:	90 e0       	ldi	r25, 0x00	; 0
 cc4:	08 95       	ret

00000cc6 <_ZN3MCU8Features5ASKIIEi>:
 cc6:	8a 30       	cpi	r24, 0x0A	; 10
 cc8:	91 05       	cpc	r25, r1
 cca:	10 f4       	brcc	.+4      	; 0xcd0 <_ZN3MCU8Features5ASKIIEi+0xa>
 ccc:	c0 96       	adiw	r24, 0x30	; 48
 cce:	08 95       	ret
 cd0:	80 e0       	ldi	r24, 0x00	; 0
 cd2:	90 e0       	ldi	r25, 0x00	; 0
 cd4:	08 95       	ret

00000cd6 <_ZN3MCU7Setting9beginPortEib>:
 cd6:	66 23       	and	r22, r22
 cd8:	11 f0       	breq	.+4      	; 0xcde <_ZN3MCU7Setting9beginPortEib+0x8>
 cda:	2f ef       	ldi	r18, 0xFF	; 255
 cdc:	01 c0       	rjmp	.+2      	; 0xce0 <_ZN3MCU7Setting9beginPortEib+0xa>
 cde:	20 e0       	ldi	r18, 0x00	; 0
 ce0:	82 30       	cpi	r24, 0x02	; 2
 ce2:	91 05       	cpc	r25, r1
 ce4:	99 f0       	breq	.+38     	; 0xd0c <_ZN3MCU7Setting9beginPortEib+0x36>
 ce6:	2c f4       	brge	.+10     	; 0xcf2 <_ZN3MCU7Setting9beginPortEib+0x1c>
 ce8:	00 97       	sbiw	r24, 0x00	; 0
 cea:	51 f0       	breq	.+20     	; 0xd00 <_ZN3MCU7Setting9beginPortEib+0x2a>
 cec:	01 97       	sbiw	r24, 0x01	; 1
 cee:	59 f0       	breq	.+22     	; 0xd06 <_ZN3MCU7Setting9beginPortEib+0x30>
 cf0:	08 95       	ret
 cf2:	84 30       	cpi	r24, 0x04	; 4
 cf4:	91 05       	cpc	r25, r1
 cf6:	81 f0       	breq	.+32     	; 0xd18 <_ZN3MCU7Setting9beginPortEib+0x42>
 cf8:	64 f0       	brlt	.+24     	; 0xd12 <_ZN3MCU7Setting9beginPortEib+0x3c>
 cfa:	05 97       	sbiw	r24, 0x05	; 5
 cfc:	81 f0       	breq	.+32     	; 0xd1e <_ZN3MCU7Setting9beginPortEib+0x48>
 cfe:	08 95       	ret
 d00:	2a bb       	out	0x1a, r18	; 26
 d02:	1b ba       	out	0x1b, r1	; 27
 d04:	08 95       	ret
 d06:	27 bb       	out	0x17, r18	; 23
 d08:	18 ba       	out	0x18, r1	; 24
 d0a:	08 95       	ret
 d0c:	24 bb       	out	0x14, r18	; 20
 d0e:	15 ba       	out	0x15, r1	; 21
 d10:	08 95       	ret
 d12:	21 bb       	out	0x11, r18	; 17
 d14:	12 ba       	out	0x12, r1	; 18
 d16:	08 95       	ret
 d18:	22 b9       	out	0x02, r18	; 2
 d1a:	13 b8       	out	0x03, r1	; 3
 d1c:	08 95       	ret
 d1e:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 d22:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 d26:	08 95       	ret

00000d28 <_ZN3MCU7Setting10beginTimerEii>:
//----------------------------------------*/

void MCU::Setting::beginTimer (int timerIndex, int timerMode)
{
	
	switch (timerIndex)
 d28:	81 30       	cpi	r24, 0x01	; 1
 d2a:	91 05       	cpc	r25, r1
 d2c:	09 f4       	brne	.+2      	; 0xd30 <_ZN3MCU7Setting10beginTimerEii+0x8>
 d2e:	49 c0       	rjmp	.+146    	; 0xdc2 <_ZN3MCU7Setting10beginTimerEii+0x9a>
 d30:	1c f4       	brge	.+6      	; 0xd38 <_ZN3MCU7Setting10beginTimerEii+0x10>
 d32:	89 2b       	or	r24, r25
 d34:	41 f0       	breq	.+16     	; 0xd46 <_ZN3MCU7Setting10beginTimerEii+0x1e>
 d36:	08 95       	ret
 d38:	82 30       	cpi	r24, 0x02	; 2
 d3a:	91 05       	cpc	r25, r1
 d3c:	19 f1       	breq	.+70     	; 0xd84 <_ZN3MCU7Setting10beginTimerEii+0x5c>
 d3e:	03 97       	sbiw	r24, 0x03	; 3
 d40:	09 f4       	brne	.+2      	; 0xd44 <_ZN3MCU7Setting10beginTimerEii+0x1c>
 d42:	63 c0       	rjmp	.+198    	; 0xe0a <_ZN3MCU7Setting10beginTimerEii+0xe2>
 d44:	08 95       	ret
	{
		// TIMER INTERRUPT 0, 2 (8 BIT)
		case 0:
			if (timerMode == OVF)
 d46:	67 30       	cpi	r22, 0x07	; 7
 d48:	71 05       	cpc	r23, r1
 d4a:	59 f4       	brne	.+22     	; 0xd62 <_ZN3MCU7Setting10beginTimerEii+0x3a>
			{
				TIMSK += insertBit(0, HIGH);
 d4c:	61 e0       	ldi	r22, 0x01	; 1
 d4e:	80 e0       	ldi	r24, 0x00	; 0
 d50:	90 e0       	ldi	r25, 0x00	; 0
 d52:	aa df       	rcall	.-172    	; 0xca8 <_ZN3MCU9insertBitEib>
 d54:	97 b7       	in	r25, 0x37	; 55
 d56:	89 0f       	add	r24, r25
 d58:	87 bf       	out	0x37, r24	; 55
				
				TCCR0 = 0x07;		// 1024, Normal Mode
 d5a:	87 e0       	ldi	r24, 0x07	; 7
 d5c:	83 bf       	out	0x33, r24	; 51
				TCNT0 = 0x00;		// Start Counting 0x00
 d5e:	12 be       	out	0x32, r1	; 50
 d60:	08 95       	ret
			}
			
			else if (timerMode == COMP)
 d62:	66 30       	cpi	r22, 0x06	; 6
 d64:	71 05       	cpc	r23, r1
 d66:	09 f0       	breq	.+2      	; 0xd6a <_ZN3MCU7Setting10beginTimerEii+0x42>
 d68:	81 c0       	rjmp	.+258    	; 0xe6c <_ZN3MCU7Setting10beginTimerEii+0x144>
			{
				TIMSK += insertBit(1, HIGH);
 d6a:	61 e0       	ldi	r22, 0x01	; 1
 d6c:	81 e0       	ldi	r24, 0x01	; 1
 d6e:	90 e0       	ldi	r25, 0x00	; 0
 d70:	9b df       	rcall	.-202    	; 0xca8 <_ZN3MCU9insertBitEib>
 d72:	97 b7       	in	r25, 0x37	; 55
 d74:	89 0f       	add	r24, r25
 d76:	87 bf       	out	0x37, r24	; 55
				
				TCCR0 = 0x0F;		// 1024, CTC Mode
 d78:	8f e0       	ldi	r24, 0x0F	; 15
 d7a:	83 bf       	out	0x33, r24	; 51
				TCNT0 = 0x00;		// Start Counting 0x00
 d7c:	12 be       	out	0x32, r1	; 50
				OCR0 = 0xFF;		// Compare with 0xFF
 d7e:	8f ef       	ldi	r24, 0xFF	; 255
 d80:	81 bf       	out	0x31, r24	; 49
 d82:	08 95       	ret
			}
			
			break;
		
		case 2:
			if (timerMode == OVF)
 d84:	67 30       	cpi	r22, 0x07	; 7
 d86:	71 05       	cpc	r23, r1
 d88:	59 f4       	brne	.+22     	; 0xda0 <_ZN3MCU7Setting10beginTimerEii+0x78>
			{
				TIMSK += insertBit(6, HIGH);
 d8a:	61 e0       	ldi	r22, 0x01	; 1
 d8c:	86 e0       	ldi	r24, 0x06	; 6
 d8e:	90 e0       	ldi	r25, 0x00	; 0
 d90:	8b df       	rcall	.-234    	; 0xca8 <_ZN3MCU9insertBitEib>
 d92:	97 b7       	in	r25, 0x37	; 55
 d94:	89 0f       	add	r24, r25
 d96:	87 bf       	out	0x37, r24	; 55
				
				TCCR2 = 0x05;		// 1024, Normal Mode
 d98:	85 e0       	ldi	r24, 0x05	; 5
 d9a:	85 bd       	out	0x25, r24	; 37
				TCNT2 = 0x00;		// Start Counting 0x00
 d9c:	14 bc       	out	0x24, r1	; 36
 d9e:	08 95       	ret
			}
			
			else if (timerMode == COMP)
 da0:	66 30       	cpi	r22, 0x06	; 6
 da2:	71 05       	cpc	r23, r1
 da4:	09 f0       	breq	.+2      	; 0xda8 <_ZN3MCU7Setting10beginTimerEii+0x80>
 da6:	62 c0       	rjmp	.+196    	; 0xe6c <_ZN3MCU7Setting10beginTimerEii+0x144>
			{
				TIMSK += insertBit(7, HIGH);
 da8:	61 e0       	ldi	r22, 0x01	; 1
 daa:	87 e0       	ldi	r24, 0x07	; 7
 dac:	90 e0       	ldi	r25, 0x00	; 0
 dae:	7c df       	rcall	.-264    	; 0xca8 <_ZN3MCU9insertBitEib>
 db0:	97 b7       	in	r25, 0x37	; 55
 db2:	89 0f       	add	r24, r25
 db4:	87 bf       	out	0x37, r24	; 55
				
				TCCR2 = 0x0D;		// 1024, CTC Mode
 db6:	8d e0       	ldi	r24, 0x0D	; 13
 db8:	85 bd       	out	0x25, r24	; 37
				TCNT2 = 0x00;		// Start Counting 0x00
 dba:	14 bc       	out	0x24, r1	; 36
				OCR2 = 0xA0;		// Compare with 0xA0
 dbc:	80 ea       	ldi	r24, 0xA0	; 160
 dbe:	83 bd       	out	0x23, r24	; 35
 dc0:	08 95       	ret
			
			break;
		
		// TIMER INTERRUPT 1, 3 (16 BIT)
		case 1:
			if (timerMode == OVF)
 dc2:	67 30       	cpi	r22, 0x07	; 7
 dc4:	71 05       	cpc	r23, r1
			{
				TIMSK += insertBit(2, HIGH);
 dc6:	69 f4       	brne	.+26     	; 0xde2 <_ZN3MCU7Setting10beginTimerEii+0xba>
 dc8:	61 e0       	ldi	r22, 0x01	; 1
 dca:	82 e0       	ldi	r24, 0x02	; 2
 dcc:	90 e0       	ldi	r25, 0x00	; 0
 dce:	6c df       	rcall	.-296    	; 0xca8 <_ZN3MCU9insertBitEib>
 dd0:	97 b7       	in	r25, 0x37	; 55
 dd2:	89 0f       	add	r24, r25
 dd4:	87 bf       	out	0x37, r24	; 55
				
				TCCR1A = 0x00;
 dd6:	1f bc       	out	0x2f, r1	; 47
				TCCR1B = 0x05;		// 1024, Normal Mode
 dd8:	85 e0       	ldi	r24, 0x05	; 5
 dda:	8e bd       	out	0x2e, r24	; 46
				TCNT1H = 0x00;
 ddc:	1d bc       	out	0x2d, r1	; 45
				TCNT1L = 0x00;		// Start Counting 0x0000
 dde:	1c bc       	out	0x2c, r1	; 44
 de0:	08 95       	ret
			}
			
			else if (timerMode == COMP)
 de2:	66 30       	cpi	r22, 0x06	; 6
 de4:	71 05       	cpc	r23, r1
 de6:	09 f0       	breq	.+2      	; 0xdea <_ZN3MCU7Setting10beginTimerEii+0xc2>
			{
				TIMSK += insertBit(4, HIGH);
 de8:	41 c0       	rjmp	.+130    	; 0xe6c <_ZN3MCU7Setting10beginTimerEii+0x144>
 dea:	61 e0       	ldi	r22, 0x01	; 1
 dec:	84 e0       	ldi	r24, 0x04	; 4
 dee:	90 e0       	ldi	r25, 0x00	; 0
 df0:	5b df       	rcall	.-330    	; 0xca8 <_ZN3MCU9insertBitEib>
 df2:	97 b7       	in	r25, 0x37	; 55
 df4:	89 0f       	add	r24, r25
 df6:	87 bf       	out	0x37, r24	; 55
				
				TCCR1A = 0x00;
 df8:	1f bc       	out	0x2f, r1	; 47
				TCCR1B = 0x0D;		// 1024, CTC Mode
 dfa:	8d e0       	ldi	r24, 0x0D	; 13
 dfc:	8e bd       	out	0x2e, r24	; 46
				TCNT1H = 0x00;
 dfe:	1d bc       	out	0x2d, r1	; 45
				TCNT1L = 0x00;		// Start Counting 0x0000
 e00:	1c bc       	out	0x2c, r1	; 44
				OCR1AH = 0xFF;
 e02:	8f ef       	ldi	r24, 0xFF	; 255
 e04:	8b bd       	out	0x2b, r24	; 43
				OCR1AL = 0xFF;		// Compare with 0xFFFF
 e06:	8a bd       	out	0x2a, r24	; 42
 e08:	08 95       	ret
			}
			
			break;
		
		case 3:
			if (timerMode == OVF)
 e0a:	67 30       	cpi	r22, 0x07	; 7
 e0c:	71 05       	cpc	r23, r1
			{
				ETIMSK += insertBit(2, HIGH);
 e0e:	99 f4       	brne	.+38     	; 0xe36 <_ZN3MCU7Setting10beginTimerEii+0x10e>
 e10:	61 e0       	ldi	r22, 0x01	; 1
 e12:	82 e0       	ldi	r24, 0x02	; 2
 e14:	90 e0       	ldi	r25, 0x00	; 0
 e16:	48 df       	rcall	.-368    	; 0xca8 <_ZN3MCU9insertBitEib>
 e18:	ed e7       	ldi	r30, 0x7D	; 125
 e1a:	f0 e0       	ldi	r31, 0x00	; 0
 e1c:	90 81       	ld	r25, Z
 e1e:	89 0f       	add	r24, r25
 e20:	80 83       	st	Z, r24
				
				TCCR3A = 0x00;
 e22:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
				TCCR3B = 0x05;		// 1024, Normal Mode
 e26:	85 e0       	ldi	r24, 0x05	; 5
 e28:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
				TCNT3H = 0x00;
 e2c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
				TCNT3L = 0x00;		// Start Counting 0x0000
 e30:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			}
			
			else if (timerMode == COMP)
 e34:	08 95       	ret
 e36:	66 30       	cpi	r22, 0x06	; 6
 e38:	71 05       	cpc	r23, r1
			{
				ETIMSK += insertBit(4, HIGH);
 e3a:	c1 f4       	brne	.+48     	; 0xe6c <_ZN3MCU7Setting10beginTimerEii+0x144>
 e3c:	61 e0       	ldi	r22, 0x01	; 1
 e3e:	84 e0       	ldi	r24, 0x04	; 4
 e40:	90 e0       	ldi	r25, 0x00	; 0
 e42:	32 df       	rcall	.-412    	; 0xca8 <_ZN3MCU9insertBitEib>
 e44:	ed e7       	ldi	r30, 0x7D	; 125
 e46:	f0 e0       	ldi	r31, 0x00	; 0
 e48:	90 81       	ld	r25, Z
 e4a:	89 0f       	add	r24, r25
 e4c:	80 83       	st	Z, r24
				
				TCCR3A = 0x00;
 e4e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
				TCCR3B = 0x0D;		// 1024, CTC Mode
 e52:	8d e0       	ldi	r24, 0x0D	; 13
 e54:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
				TCNT3H = 0x00;
 e58:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
				TCNT3L = 0x00;		// Start Counting 0x0000
 e5c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
				OCR3AH = 0x3D;
 e60:	8d e3       	ldi	r24, 0x3D	; 61
 e62:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
				OCR3AL = 0x09;		// Compare with 0x3D09
 e66:	89 e0       	ldi	r24, 0x09	; 9
 e68:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 e6c:	08 95       	ret

00000e6e <_ZN2SW4initEv>:
/*----------------------------------------//
			 Initialize Switch
//----------------------------------------*/

void SW::init (void)
{
 e6e:	fc 01       	movw	r30, r24
	
	switch (m_SwitchPort)
 e70:	80 81       	ld	r24, Z
 e72:	91 81       	ldd	r25, Z+1	; 0x01
 e74:	82 30       	cpi	r24, 0x02	; 2
 e76:	91 05       	cpc	r25, r1
 e78:	b9 f0       	breq	.+46     	; 0xea8 <_ZN2SW4initEv+0x3a>
 e7a:	28 f4       	brcc	.+10     	; 0xe86 <_ZN2SW4initEv+0x18>
 e7c:	00 97       	sbiw	r24, 0x00	; 0
 e7e:	51 f0       	breq	.+20     	; 0xe94 <_ZN2SW4initEv+0x26>
 e80:	01 97       	sbiw	r24, 0x01	; 1
 e82:	69 f0       	breq	.+26     	; 0xe9e <_ZN2SW4initEv+0x30>
 e84:	24 c0       	rjmp	.+72     	; 0xece <_ZN2SW4initEv+0x60>
 e86:	84 30       	cpi	r24, 0x04	; 4
 e88:	91 05       	cpc	r25, r1
 e8a:	c1 f0       	breq	.+48     	; 0xebc <_ZN2SW4initEv+0x4e>
 e8c:	90 f0       	brcs	.+36     	; 0xeb2 <_ZN2SW4initEv+0x44>
 e8e:	05 97       	sbiw	r24, 0x05	; 5
 e90:	d1 f0       	breq	.+52     	; 0xec6 <_ZN2SW4initEv+0x58>
 e92:	1d c0       	rjmp	.+58     	; 0xece <_ZN2SW4initEv+0x60>
	{
		// PORTA
		case A:
			m_NewValue = PINA;
 e94:	89 b3       	in	r24, 0x19	; 25
 e96:	90 e0       	ldi	r25, 0x00	; 0
 e98:	94 83       	std	Z+4, r25	; 0x04
 e9a:	83 83       	std	Z+3, r24	; 0x03
			break;
 e9c:	18 c0       	rjmp	.+48     	; 0xece <_ZN2SW4initEv+0x60>
		
		// PORTB
		case B:
			m_NewValue = PINB;
 e9e:	86 b3       	in	r24, 0x16	; 22
 ea0:	90 e0       	ldi	r25, 0x00	; 0
 ea2:	94 83       	std	Z+4, r25	; 0x04
 ea4:	83 83       	std	Z+3, r24	; 0x03
			break;
 ea6:	13 c0       	rjmp	.+38     	; 0xece <_ZN2SW4initEv+0x60>
		
		// PORTC
		case C:
			m_NewValue = PINC;
 ea8:	83 b3       	in	r24, 0x13	; 19
 eaa:	90 e0       	ldi	r25, 0x00	; 0
 eac:	94 83       	std	Z+4, r25	; 0x04
 eae:	83 83       	std	Z+3, r24	; 0x03
			break;
 eb0:	0e c0       	rjmp	.+28     	; 0xece <_ZN2SW4initEv+0x60>
		
		// PORTD
		case D:
			m_NewValue = PIND;
 eb2:	80 b3       	in	r24, 0x10	; 16
 eb4:	90 e0       	ldi	r25, 0x00	; 0
 eb6:	94 83       	std	Z+4, r25	; 0x04
 eb8:	83 83       	std	Z+3, r24	; 0x03
			break;
 eba:	09 c0       	rjmp	.+18     	; 0xece <_ZN2SW4initEv+0x60>
		
		// PORTE
		case E:
			m_NewValue = PINE;
 ebc:	81 b1       	in	r24, 0x01	; 1
 ebe:	90 e0       	ldi	r25, 0x00	; 0
 ec0:	94 83       	std	Z+4, r25	; 0x04
 ec2:	83 83       	std	Z+3, r24	; 0x03
			break;
 ec4:	04 c0       	rjmp	.+8      	; 0xece <_ZN2SW4initEv+0x60>
		
		// PORTF
		case F:
			m_NewValue = PINF;
 ec6:	80 b1       	in	r24, 0x00	; 0
 ec8:	90 e0       	ldi	r25, 0x00	; 0
 eca:	94 83       	std	Z+4, r25	; 0x04
 ecc:	83 83       	std	Z+3, r24	; 0x03
		
		default:
			break;
	}
	
	if (m_isReversal == true)
 ece:	82 81       	ldd	r24, Z+2	; 0x02
 ed0:	88 23       	and	r24, r24
 ed2:	79 f0       	breq	.+30     	; 0xef2 <_ZN2SW4initEv+0x84>
	{
		result = m_OldValue & ~m_NewValue;
 ed4:	25 81       	ldd	r18, Z+5	; 0x05
 ed6:	36 81       	ldd	r19, Z+6	; 0x06
 ed8:	83 81       	ldd	r24, Z+3	; 0x03
 eda:	94 81       	ldd	r25, Z+4	; 0x04
 edc:	80 95       	com	r24
 ede:	90 95       	com	r25
 ee0:	82 23       	and	r24, r18
 ee2:	93 23       	and	r25, r19
 ee4:	90 87       	std	Z+8, r25	; 0x08
 ee6:	87 83       	std	Z+7, r24	; 0x07
		m_OldValue = m_NewValue;
 ee8:	83 81       	ldd	r24, Z+3	; 0x03
 eea:	94 81       	ldd	r25, Z+4	; 0x04
 eec:	96 83       	std	Z+6, r25	; 0x06
 eee:	85 83       	std	Z+5, r24	; 0x05
 ef0:	08 95       	ret
	}
	
	else
	{
		result = m_OldValue & m_NewValue;
 ef2:	25 81       	ldd	r18, Z+5	; 0x05
 ef4:	36 81       	ldd	r19, Z+6	; 0x06
 ef6:	83 81       	ldd	r24, Z+3	; 0x03
 ef8:	94 81       	ldd	r25, Z+4	; 0x04
 efa:	82 23       	and	r24, r18
 efc:	93 23       	and	r25, r19
 efe:	90 87       	std	Z+8, r25	; 0x08
 f00:	87 83       	std	Z+7, r24	; 0x07
		m_OldValue = ~m_NewValue;
 f02:	83 81       	ldd	r24, Z+3	; 0x03
 f04:	94 81       	ldd	r25, Z+4	; 0x04
 f06:	80 95       	com	r24
 f08:	90 95       	com	r25
 f0a:	96 83       	std	Z+6, r25	; 0x06
 f0c:	85 83       	std	Z+5, r24	; 0x05
 f0e:	08 95       	ret

00000f10 <__tablejump2__>:
 f10:	ee 0f       	add	r30, r30
 f12:	ff 1f       	adc	r31, r31
 f14:	00 24       	eor	r0, r0
 f16:	00 1c       	adc	r0, r0
 f18:	0b be       	out	0x3b, r0	; 59
 f1a:	07 90       	elpm	r0, Z+
 f1c:	f6 91       	elpm	r31, Z
 f1e:	e0 2d       	mov	r30, r0
 f20:	09 94       	ijmp

00000f22 <_exit>:
 f22:	f8 94       	cli

00000f24 <__stop_program>:
 f24:	ff cf       	rjmp	.-2      	; 0xf24 <__stop_program>
