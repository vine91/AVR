
ATmega128A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000394  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000418  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000458  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000109d  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a01  00000000  00000000  00001575  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000837  00000000  00000000  00001f76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  000027b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000646  00000000  00000000  000028ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008df  00000000  00000000  00002ef2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000037d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	13 01       	movw	r2, r6
  8e:	31 01       	movw	r6, r2
  90:	40 01       	movw	r8, r0
  92:	4f 01       	movw	r8, r30
  94:	22 01       	movw	r4, r4
  96:	5e 01       	movw	r10, r28
  98:	6f 01       	movw	r12, r30
  9a:	80 01       	movw	r16, r0

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e1       	ldi	r29, 0x10	; 16
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e4 e9       	ldi	r30, 0x94	; 148
  b0:	f3 e0       	ldi	r31, 0x03	; 3
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a0 30       	cpi	r26, 0x00	; 0
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	65 c1       	rjmp	.+714    	; 0x390 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
-------------   MAIN START   ---------------
//========================================*/

int main (void)
{
	beginPort(B, OUT);
  c8:	61 e0       	ldi	r22, 0x01	; 1
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	55 d0       	rcall	.+170    	; 0x17a <_ZN3MCU7Setting9beginPortEib>
	beginPort(C, IN);
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	51 d0       	rcall	.+162    	; 0x17a <_ZN3MCU7Setting9beginPortEib>
	
	beginExtend(0, MAINTAIN);
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	75 d0       	rcall	.+234    	; 0x1cc <_ZN3MCU7Setting11beginExtendEii>
	beginExtend(1, MAINTAIN);
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	70 d0       	rcall	.+224    	; 0x1cc <_ZN3MCU7Setting11beginExtendEii>
	beginExtend(2, MAINTAIN);
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	6b d0       	rcall	.+214    	; 0x1cc <_ZN3MCU7Setting11beginExtendEii>
	beginExtend(3, MAINTAIN);
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	66 d0       	rcall	.+204    	; 0x1cc <_ZN3MCU7Setting11beginExtendEii>
	
	beginPWM(OC1B, CORRECT);
 100:	68 e0       	ldi	r22, 0x08	; 8
 102:	70 e0       	ldi	r23, 0x00	; 0
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	81 d0       	rcall	.+258    	; 0x20c <_ZN3MCU7Setting8beginPWMEii>
	beginPWM(OC2, CORRECT);
 10a:	68 e0       	ldi	r22, 0x08	; 8
 10c:	70 e0       	ldi	r23, 0x00	; 0
 10e:	84 e0       	ldi	r24, 0x04	; 4
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	7c d0       	rcall	.+248    	; 0x20c <_ZN3MCU7Setting8beginPWMEii>
 114:	78 94       	sei
	
	sei();
 116:	80 e0       	ldi	r24, 0x00	; 0
	
	while (true)
	{
		
		for (int i=0; i<=255; i++)
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	8f 3f       	cpi	r24, 0xFF	; 255
 11c:	91 05       	cpc	r25, r1
 11e:	09 f0       	breq	.+2      	; 0x122 <main+0x5a>
 120:	54 f4       	brge	.+20     	; 0x136 <main+0x6e>
 122:	99 bd       	out	0x29, r25	; 41
		{
			OCR1B = i;
 124:	88 bd       	out	0x28, r24	; 40
 126:	ef ef       	ldi	r30, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	ff e8       	ldi	r31, 0x8F	; 143
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0x62>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x68>
 130:	00 00       	nop
 132:	01 96       	adiw	r24, 0x01	; 1
	sei();
	
	while (true)
	{
		
		for (int i=0; i<=255; i++)
 134:	f2 cf       	rjmp	.-28     	; 0x11a <main+0x52>
 136:	19 bc       	out	0x29, r1	; 41
		{
			OCR1B = i;
			_delay_ms(10);
		}
		
		OCR1B = 0;
 138:	18 bc       	out	0x28, r1	; 40
 13a:	80 e0       	ldi	r24, 0x00	; 0
		
		for (int i=0; i<=255; i++)
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	8f 3f       	cpi	r24, 0xFF	; 255
 140:	91 05       	cpc	r25, r1
 142:	09 f0       	breq	.+2      	; 0x146 <main+0x7e>
 144:	4c f4       	brge	.+18     	; 0x158 <main+0x90>
 146:	83 bd       	out	0x23, r24	; 35
		{
			OCR2 = i;
 148:	ef ef       	ldi	r30, 0xFF	; 255
 14a:	ff e8       	ldi	r31, 0x8F	; 143
 14c:	31 97       	sbiw	r30, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <main+0x84>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0x8a>
 152:	00 00       	nop
 154:	01 96       	adiw	r24, 0x01	; 1
			_delay_ms(10);
		}
		
		OCR1B = 0;
		
		for (int i=0; i<=255; i++)
 156:	f3 cf       	rjmp	.-26     	; 0x13e <main+0x76>
 158:	13 bc       	out	0x23, r1	; 35
		{
			OCR2 = i;
			_delay_ms(10);
		}
		
		OCR2 = 0;
 15a:	dd cf       	rjmp	.-70     	; 0x116 <main+0x4e>

0000015c <_ZN3MCU9insertBitEib>:
	beginPWM(OC1B, CORRECT);
	beginPWM(OC2, CORRECT);
	
	sei();
	
	while (true)
 15c:	66 23       	and	r22, r22
				TCCR3A = 0x00;
				TCCR3B = 0x0D;		// 1024, CTC Mode
				TCNT3H = 0x00;
				TCNT3L = 0x00;		// Start Counting 0x0000
				OCR3AH = 0x3D;
				OCR3AL = 0x09;		// Compare with 0x3D09
 15e:	51 f0       	breq	.+20     	; 0x174 <_ZN3MCU9insertBitEib+0x18>
 160:	21 e0       	ldi	r18, 0x01	; 1
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	a9 01       	movw	r20, r18
 166:	02 c0       	rjmp	.+4      	; 0x16c <_ZN3MCU9insertBitEib+0x10>
 168:	44 0f       	add	r20, r20
 16a:	55 1f       	adc	r21, r21
 16c:	8a 95       	dec	r24
 16e:	e2 f7       	brpl	.-8      	; 0x168 <_ZN3MCU9insertBitEib+0xc>
 170:	ca 01       	movw	r24, r20
 172:	08 95       	ret
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	08 95       	ret

0000017a <_ZN3MCU7Setting9beginPortEib>:
 17a:	66 23       	and	r22, r22
 17c:	11 f0       	breq	.+4      	; 0x182 <_ZN3MCU7Setting9beginPortEib+0x8>
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	01 c0       	rjmp	.+2      	; 0x184 <_ZN3MCU7Setting9beginPortEib+0xa>
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	82 30       	cpi	r24, 0x02	; 2
 186:	91 05       	cpc	r25, r1
 188:	99 f0       	breq	.+38     	; 0x1b0 <_ZN3MCU7Setting9beginPortEib+0x36>
 18a:	2c f4       	brge	.+10     	; 0x196 <_ZN3MCU7Setting9beginPortEib+0x1c>
 18c:	00 97       	sbiw	r24, 0x00	; 0
 18e:	51 f0       	breq	.+20     	; 0x1a4 <_ZN3MCU7Setting9beginPortEib+0x2a>
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	59 f0       	breq	.+22     	; 0x1aa <_ZN3MCU7Setting9beginPortEib+0x30>
 194:	08 95       	ret
 196:	84 30       	cpi	r24, 0x04	; 4
 198:	91 05       	cpc	r25, r1
 19a:	81 f0       	breq	.+32     	; 0x1bc <_ZN3MCU7Setting9beginPortEib+0x42>
 19c:	64 f0       	brlt	.+24     	; 0x1b6 <_ZN3MCU7Setting9beginPortEib+0x3c>
 19e:	05 97       	sbiw	r24, 0x05	; 5
 1a0:	81 f0       	breq	.+32     	; 0x1c2 <_ZN3MCU7Setting9beginPortEib+0x48>
 1a2:	08 95       	ret
 1a4:	2a bb       	out	0x1a, r18	; 26
 1a6:	1b ba       	out	0x1b, r1	; 27
 1a8:	08 95       	ret
 1aa:	27 bb       	out	0x17, r18	; 23
 1ac:	18 ba       	out	0x18, r1	; 24
 1ae:	08 95       	ret
 1b0:	24 bb       	out	0x14, r18	; 20
 1b2:	15 ba       	out	0x15, r1	; 21
 1b4:	08 95       	ret
 1b6:	21 bb       	out	0x11, r18	; 17
 1b8:	12 ba       	out	0x12, r1	; 18
 1ba:	08 95       	ret
 1bc:	22 b9       	out	0x02, r18	; 2
 1be:	13 b8       	out	0x03, r1	; 3
 1c0:	08 95       	ret
 1c2:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 1c6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 1ca:	08 95       	ret

000001cc <_ZN3MCU7Setting11beginExtendEii>:
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	eb 01       	movw	r28, r22
 1d2:	61 e0       	ldi	r22, 0x01	; 1
 1d4:	c3 df       	rcall	.-122    	; 0x15c <_ZN3MCU9insertBitEib>
 1d6:	99 b7       	in	r25, 0x39	; 57
 1d8:	89 0f       	add	r24, r25
 1da:	89 bf       	out	0x39, r24	; 57
 1dc:	c1 30       	cpi	r28, 0x01	; 1
 1de:	d1 05       	cpc	r29, r1
 1e0:	49 f0       	breq	.+18     	; 0x1f4 <_ZN3MCU7Setting11beginExtendEii+0x28>
 1e2:	c2 30       	cpi	r28, 0x02	; 2
 1e4:	d1 05       	cpc	r29, r1
 1e6:	59 f0       	breq	.+22     	; 0x1fe <_ZN3MCU7Setting11beginExtendEii+0x32>
 1e8:	cd 2b       	or	r28, r29
 1ea:	69 f4       	brne	.+26     	; 0x206 <_ZN3MCU7Setting11beginExtendEii+0x3a>
 1ec:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 1f0:	1a be       	out	0x3a, r1	; 58
 1f2:	09 c0       	rjmp	.+18     	; 0x206 <_ZN3MCU7Setting11beginExtendEii+0x3a>
 1f4:	8a ea       	ldi	r24, 0xAA	; 170
 1f6:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 1fa:	8a bf       	out	0x3a, r24	; 58
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <_ZN3MCU7Setting11beginExtendEii+0x3a>
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 204:	8a bf       	out	0x3a, r24	; 58
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	08 95       	ret

0000020c <_ZN3MCU7Setting8beginPWMEii>:
/*----------------------------------------//
			  Begin Timer PWM
//----------------------------------------*/

void MCU::Setting::beginPWM(int PWMIndex, int PWMMode)
{
 20c:	0f 93       	push	r16
 20e:	1f 93       	push	r17
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	eb 01       	movw	r28, r22
	
	int correctValue = 0x04;		// 256, Phase Correct PWM (8Bit)	0x04
	int fastValue = 0x0C;			// 256, Fast PWM Mode (8Bit)		0x0C
	
	switch (PWMIndex)
 216:	88 30       	cpi	r24, 0x08	; 8
 218:	91 05       	cpc	r25, r1
 21a:	08 f0       	brcs	.+2      	; 0x21e <_ZN3MCU7Setting8beginPWMEii+0x12>
 21c:	81 c0       	rjmp	.+258    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
 21e:	fc 01       	movw	r30, r24
 220:	ea 5b       	subi	r30, 0xBA	; 186
 222:	ff 4f       	sbci	r31, 0xFF	; 255
 224:	ac c0       	rjmp	.+344    	; 0x37e <__tablejump2__>
	{
		// TIMER PWM 0, 2 (8 BIT)
		case OC0:
			if (PWMMode == CORRECT)
 226:	68 30       	cpi	r22, 0x08	; 8
 228:	71 05       	cpc	r23, r1
 22a:	21 f4       	brne	.+8      	; 0x234 <_ZN3MCU7Setting8beginPWMEii+0x28>
			{
				TCCR0 = 0x66;		// 256, Phase Correct PWM
 22c:	86 e6       	ldi	r24, 0x66	; 102
 22e:	83 bf       	out	0x33, r24	; 51
				TCNT0 = 0x00;		// Start Counting 0x00
 230:	12 be       	out	0x32, r1	; 50
 232:	76 c0       	rjmp	.+236    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			}
			
			else if (PWMMode == FAST)
 234:	69 30       	cpi	r22, 0x09	; 9
 236:	71 05       	cpc	r23, r1
 238:	09 f0       	breq	.+2      	; 0x23c <_ZN3MCU7Setting8beginPWMEii+0x30>
 23a:	72 c0       	rjmp	.+228    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			{
				TCCR0 = 0x6E;		// 256, Fast PWM Mode
 23c:	8e e6       	ldi	r24, 0x6E	; 110
 23e:	83 bf       	out	0x33, r24	; 51
				TCNT0 = 0x00;		// Start Counting 0x00
 240:	12 be       	out	0x32, r1	; 50
 242:	6e c0       	rjmp	.+220    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			}
			
			break;
		
		case OC2:
			if (PWMMode == CORRECT)
 244:	68 30       	cpi	r22, 0x08	; 8
 246:	71 05       	cpc	r23, r1
 248:	21 f4       	brne	.+8      	; 0x252 <_ZN3MCU7Setting8beginPWMEii+0x46>
			{
				TCCR2 = 0x64;		// 256, Phase Correct PWM
 24a:	84 e6       	ldi	r24, 0x64	; 100
 24c:	85 bd       	out	0x25, r24	; 37
				TCNT2 = 0x00;		// Start Counting 0x00
 24e:	14 bc       	out	0x24, r1	; 36
 250:	67 c0       	rjmp	.+206    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			}
			
			else if (PWMMode == FAST)
 252:	69 30       	cpi	r22, 0x09	; 9
 254:	71 05       	cpc	r23, r1
 256:	09 f0       	breq	.+2      	; 0x25a <_ZN3MCU7Setting8beginPWMEii+0x4e>
 258:	63 c0       	rjmp	.+198    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			{
				TCCR2 = 0x6C;		// 256, Fast PWM Mode
 25a:	8c e6       	ldi	r24, 0x6C	; 108
 25c:	85 bd       	out	0x25, r24	; 37
				TCNT2 = 0x00;		// Start Counting 0x00
 25e:	14 bc       	out	0x24, r1	; 36
 260:	5f c0       	rjmp	.+190    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
			
			break;
		
		// TIMER PWM 1, 3 (8, 9, 10 BIT)
		case OC1A:
			TCCR1A |= insertBit(0, HIGH) | insertBit(7, HIGH);
 262:	61 e0       	ldi	r22, 0x01	; 1
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	79 df       	rcall	.-270    	; 0x15c <_ZN3MCU9insertBitEib>
 26a:	8c 01       	movw	r16, r24
 26c:	61 e0       	ldi	r22, 0x01	; 1
 26e:	87 e0       	ldi	r24, 0x07	; 7
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	74 df       	rcall	.-280    	; 0x15c <_ZN3MCU9insertBitEib>
 274:	2f b5       	in	r18, 0x2f	; 47
 276:	80 2b       	or	r24, r16
 278:	91 2b       	or	r25, r17
 27a:	82 2b       	or	r24, r18
 27c:	8f bd       	out	0x2f, r24	; 47
			break;
 27e:	50 c0       	rjmp	.+160    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
		
		case OC1B:
			TCCR1A |= insertBit(0, HIGH) | insertBit(5, HIGH);
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	6a df       	rcall	.-300    	; 0x15c <_ZN3MCU9insertBitEib>
 288:	8c 01       	movw	r16, r24
 28a:	61 e0       	ldi	r22, 0x01	; 1
 28c:	85 e0       	ldi	r24, 0x05	; 5
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	65 df       	rcall	.-310    	; 0x15c <_ZN3MCU9insertBitEib>
 292:	2f b5       	in	r18, 0x2f	; 47
 294:	80 2b       	or	r24, r16
 296:	91 2b       	or	r25, r17
 298:	82 2b       	or	r24, r18
 29a:	8f bd       	out	0x2f, r24	; 47
			break;
 29c:	41 c0       	rjmp	.+130    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
		
		case OC1C:
			TCCR1A |= insertBit(0, HIGH) | insertBit(3, HIGH);
 29e:	61 e0       	ldi	r22, 0x01	; 1
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	5b df       	rcall	.-330    	; 0x15c <_ZN3MCU9insertBitEib>
 2a6:	8c 01       	movw	r16, r24
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	83 e0       	ldi	r24, 0x03	; 3
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	56 df       	rcall	.-340    	; 0x15c <_ZN3MCU9insertBitEib>
 2b0:	2f b5       	in	r18, 0x2f	; 47
 2b2:	80 2b       	or	r24, r16
 2b4:	91 2b       	or	r25, r17
 2b6:	82 2b       	or	r24, r18
 2b8:	8f bd       	out	0x2f, r24	; 47
			break;
 2ba:	32 c0       	rjmp	.+100    	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
		
		case OC3A:
			TCCR3A |= insertBit(0, HIGH) | insertBit(7, HIGH);
 2bc:	61 e0       	ldi	r22, 0x01	; 1
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	4c df       	rcall	.-360    	; 0x15c <_ZN3MCU9insertBitEib>
 2c4:	8c 01       	movw	r16, r24
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	87 e0       	ldi	r24, 0x07	; 7
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	47 df       	rcall	.-370    	; 0x15c <_ZN3MCU9insertBitEib>
 2ce:	eb e8       	ldi	r30, 0x8B	; 139
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	20 81       	ld	r18, Z
 2d4:	80 2b       	or	r24, r16
 2d6:	91 2b       	or	r25, r17
 2d8:	82 2b       	or	r24, r18
 2da:	80 83       	st	Z, r24
			break;
		
		case OC3B:
			TCCR3A |= insertBit(0, HIGH) | insertBit(5, HIGH);
 2dc:	21 c0       	rjmp	.+66     	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	3b df       	rcall	.-394    	; 0x15c <_ZN3MCU9insertBitEib>
 2e6:	8c 01       	movw	r16, r24
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	85 e0       	ldi	r24, 0x05	; 5
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	36 df       	rcall	.-404    	; 0x15c <_ZN3MCU9insertBitEib>
 2f0:	eb e8       	ldi	r30, 0x8B	; 139
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	20 81       	ld	r18, Z
 2f6:	80 2b       	or	r24, r16
 2f8:	91 2b       	or	r25, r17
 2fa:	82 2b       	or	r24, r18
			break;
 2fc:	80 83       	st	Z, r24
		
		case OC3C:
			TCCR3A |= insertBit(0, HIGH) | insertBit(3, HIGH);
 2fe:	10 c0       	rjmp	.+32     	; 0x320 <_ZN3MCU7Setting8beginPWMEii+0x114>
 300:	61 e0       	ldi	r22, 0x01	; 1
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	2a df       	rcall	.-428    	; 0x15c <_ZN3MCU9insertBitEib>
 308:	8c 01       	movw	r16, r24
 30a:	61 e0       	ldi	r22, 0x01	; 1
 30c:	83 e0       	ldi	r24, 0x03	; 3
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	25 df       	rcall	.-438    	; 0x15c <_ZN3MCU9insertBitEib>
 312:	eb e8       	ldi	r30, 0x8B	; 139
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	20 81       	ld	r18, Z
 318:	80 2b       	or	r24, r16
 31a:	91 2b       	or	r25, r17
 31c:	82 2b       	or	r24, r18
 31e:	80 83       	st	Z, r24
 320:	8e b5       	in	r24, 0x2e	; 46
		
		default:
			break;
	}
	
	if (TCCR1B == 0x00)
 322:	81 11       	cpse	r24, r1
 324:	0f c0       	rjmp	.+30     	; 0x344 <_ZN3MCU7Setting8beginPWMEii+0x138>
 326:	c8 30       	cpi	r28, 0x08	; 8
	{
		if (PWMMode == CORRECT)
 328:	d1 05       	cpc	r29, r1
 32a:	29 f4       	brne	.+10     	; 0x336 <_ZN3MCU7Setting8beginPWMEii+0x12a>
 32c:	84 e0       	ldi	r24, 0x04	; 4
		{
			TCCR1B = correctValue;
 32e:	8e bd       	out	0x2e, r24	; 46
 330:	1d bc       	out	0x2d, r1	; 45
			TCNT1H = 0x00;
 332:	1c bc       	out	0x2c, r1	; 44
			TCNT1L = 0x00;
 334:	1f c0       	rjmp	.+62     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 336:	29 97       	sbiw	r28, 0x09	; 9
		}
		
		else if (PWMMode == FAST)
 338:	e9 f4       	brne	.+58     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 33a:	8c e0       	ldi	r24, 0x0C	; 12
		{
			TCCR1B = fastValue;
 33c:	8e bd       	out	0x2e, r24	; 46
 33e:	1d bc       	out	0x2d, r1	; 45
			TCNT1H = 0x00;
 340:	1c bc       	out	0x2c, r1	; 44
			TCNT1L = 0x00;
 342:	18 c0       	rjmp	.+48     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 344:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		}
	}
	
	else if (TCCR3B == 0x00)
 348:	81 11       	cpse	r24, r1
 34a:	14 c0       	rjmp	.+40     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 34c:	c8 30       	cpi	r28, 0x08	; 8
	{
		if (PWMMode == CORRECT)
 34e:	d1 05       	cpc	r29, r1
 350:	41 f4       	brne	.+16     	; 0x362 <_ZN3MCU7Setting8beginPWMEii+0x156>
 352:	84 e0       	ldi	r24, 0x04	; 4
		{
			TCCR3B = correctValue;
 354:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 358:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
			TCNT3H = 0x00;
 35c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			TCNT3L = 0x00;
 360:	09 c0       	rjmp	.+18     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 362:	29 97       	sbiw	r28, 0x09	; 9
		}
		
		else if (PWMMode == FAST)
 364:	39 f4       	brne	.+14     	; 0x374 <_ZN3MCU7Setting8beginPWMEii+0x168>
 366:	8c e0       	ldi	r24, 0x0C	; 12
		{
			TCCR3B = fastValue;
 368:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 36c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
			TCNT3H = 0x00;
 370:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
			TCNT3L = 0x00;
 374:	df 91       	pop	r29
		}
	}
	
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	0f 91       	pop	r16
 37c:	08 95       	ret

0000037e <__tablejump2__>:
 37e:	ee 0f       	add	r30, r30
 380:	ff 1f       	adc	r31, r31
 382:	00 24       	eor	r0, r0
 384:	00 1c       	adc	r0, r0
 386:	0b be       	out	0x3b, r0	; 59
 388:	07 90       	elpm	r0, Z+
 38a:	f6 91       	elpm	r31, Z
 38c:	e0 2d       	mov	r30, r0
 38e:	09 94       	ijmp

00000390 <_exit>:
 390:	f8 94       	cli

00000392 <__stop_program>:
 392:	ff cf       	rjmp	.-2      	; 0x392 <__stop_program>
